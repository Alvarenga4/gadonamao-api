{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","app/assets/img/camera.svg","app/components/ImageFileInput/index.js","app/pages/Sliders/index.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ImageFileInput","label","previewUrl","onChange","invalid","props","useState","preview","setPreview","handlePreview","useCallback","e","file","files","encodeURI","URL","createObjectURL","FormGroup","Label","className","style","border","backgroundImage","display","src","camera","alt","Input","type","hidden","FormFeedback","SearchBar","Search","ExportCSVButton","CSVExport","Sliders","useManager","datas","load","destroy","update","store","showModal","setShowModal","id","setId","url","setUrl","link","setLink","image","setImage","useEffect","handleUpdate","data","_id","image_url","handleCreate","handleSave","sliderFormData","FormData","append","columns","dataField","text","sort","formatter","cell","row","width","csvExport","color","size","onClick","xs","sm","md","block","keyField","exportCSV","fileName","onlyExportFiltered","exportAll","separator","noAutoBOM","search","placeholder","searchProps","pagination","paginationFactory","baseProps","csvProps","isOpen","toggle","centered","value"],"mappings":"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","file":"static/js/8.aad48949.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/camera.95f820bb.svg\";","/* eslint-disable no-nested-ternary */\nimport React, { useState, useCallback } from 'react';\nimport { FormFeedback, FormGroup, Input, Label } from 'reactstrap';\n\nimport camera from '../../assets/img/camera.svg';\nimport './styles.css';\n\nfunction ImageFileInput({\n  label = 'Selecione uma imagem',\n  previewUrl,\n  onChange,\n  invalid,\n  ...props\n}) {\n  const [preview, setPreview] = useState();\n\n  const handlePreview = useCallback((e) => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      setPreview(null);\n      return;\n    }\n\n    setPreview(encodeURI(URL.createObjectURL(file)));\n\n    if (onChange) {\n      onChange(file);\n    }\n  }, []);\n\n  return (\n    <FormGroup>\n      <Label\n        className=\"image-file-input-container\"\n        style={{\n          border: invalid\n            ? '1px solid var(--danger)'\n            : preview || previewUrl\n              ? '1px solid var(--dark)'\n              : '1px dashed var(--dark)',\n          backgroundImage: `url(${preview || previewUrl})`,\n        }}\n      >\n        {label && !invalid && (\n          <small\n            style={{\n              display: preview || previewUrl ? 'none' : '',\n            }}\n          >\n            {label}\n          </small>\n        )}\n        <img\n          src={camera}\n          alt=\"Selecione uma Imagem\"\n          style={{\n            display: preview || previewUrl ? 'none' : '',\n          }}\n        />\n        <Input\n          type=\"file\"\n          invalid={!!invalid}\n          onChange={handlePreview}\n          hidden\n          {...props}\n        />\n        <FormFeedback className=\"text-center\">{invalid}</FormFeedback>\n      </Label>\n    </FormGroup>\n  );\n}\n\nexport default ImageFileInput;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  UncontrolledTooltip,\n} from 'reactstrap';\n\nimport ImageFileInput from '../../components/ImageFileInput';\nimport { useManager } from '../../hooks/manager';\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction Sliders() {\n  const { datas, load, destroy, update, store } = useManager();\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState({});\n  const [url, setUrl] = useState('');\n  const [link, setLink] = useState('');\n  const [image, setImage] = useState('');\n\n  useEffect(() => {\n    load('/sliders');\n  }, [load]);\n\n  const handleUpdate = useCallback((data) => {\n    setId(data._id);\n    setUrl(data.url);\n    setLink(data.link);\n    setImage(data.image_url || data.url);\n    setShowModal(true);\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    setId(null);\n    setUrl('');\n    setLink('');\n    setImage('');\n    setShowModal(true);\n  }, []);\n\n  const handleSave = useCallback(() => {\n    const sliderFormData = new FormData();\n\n    sliderFormData.append('url', url);\n    sliderFormData.append('link', link);\n    sliderFormData.append('image', image);\n\n    if (id) {\n      update(id, '/sliders', sliderFormData);\n      setShowModal(false);\n      return;\n    }\n\n    store('/sliders', sliderFormData);\n    setShowModal(false);\n  }, [id, url, link, image]);\n\n  const actions = (cell, row) => (\n    <>\n      <UncontrolledTooltip target={`button-view-${row._id}`}>\n        Alterar\n      </UncontrolledTooltip>\n      <Button\n        id={`button-view-${row._id}`}\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-2 mr-2\"\n        onClick={() => handleUpdate(row)}\n      >\n        <i className=\"fas fa-edit\" />\n      </Button>\n      <UncontrolledTooltip target={`button-delete-${row._id}`}>\n        Excluir\n      </UncontrolledTooltip>\n      <Button\n        id={`button-delete-${row._id}`}\n        color=\"danger\"\n        className=\"mt-2 mr-2\"\n        size=\"sm\"\n        onClick={() => destroy(row._id, '/sliders')}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </>\n  );\n\n  const columns = [\n    {\n      dataField: '_id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'url',\n      text: 'url da imagem',\n      hidden: true,\n    },\n    {\n      dataField: 'image_url',\n      text: 'Imagem',\n      sort: true,\n      formatter: (cell, row) => (row.image_url ? (\n        <img src={row.image_url} alt={row.image_url} width=\"100px\" />\n      ) : (\n        <img src={row.url} alt={row.url} width=\"100px\" />\n      )),\n    },\n    {\n      dataField: '#',\n      text: '#',\n      sort: false,\n      csvExport: false,\n      formatter: actions,\n      style: () => ({ width: '120px' }),\n    },\n  ];\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col>\n                  <h3>Sliders</h3>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Row>\n                <Col>\n                  <Row>\n                    <Col xs={12} sm={5} md={3} className=\"mb-3 mb-xl-0\">\n                      <Button block color=\"success\" onClick={handleCreate}>\n                        Cadastrar\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <ToolkitProvider\n                key=\"_id\"\n                keyField=\"_id\"\n                data={datas}\n                columns={columns}\n                exportCSV={{\n                  fileName: 'gadonamao-sliders.csv',\n                  onlyExportFiltered: true,\n                  exportAll: false,\n                  separator: ';',\n                  noAutoBOM: false,\n                }}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar placeholder=\"Buscar\" {...props.searchProps} />\n                    <hr />\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                )}\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(!showModal)}\n        centered\n      >\n        <ModalHeader>\n          <strong>Slider</strong>\n          <Button\n            className=\"close position-absolute top-4 right-4 py-1 px-2\"\n            onClick={() => setShowModal(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </Button>\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <ImageFileInput previewUrl={image} onChange={(file) => setImage(file)} />\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"url\"\n                value={url}\n                onChange={({ target: { value } }) => setUrl(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"link\"\n                value={link}\n                onChange={({ target: { value } }) => setLink(value)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={handleSave}>Salvar</Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Sliders;\n"],"sourceRoot":""}