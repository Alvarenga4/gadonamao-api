{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","app/assets/img/camera.svg","app/components/ImageFileInput/index.js","app/components/Divider/index.js","app/pages/Categoria/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ImageFileInput","label","previewUrl","onChange","invalid","props","useState","preview","setPreview","handlePreview","useCallback","e","file","files","encodeURI","URL","createObjectURL","FormGroup","Label","className","style","border","backgroundImage","display","src","camera","alt","Input","type","hidden","FormFeedback","Divider","color","width","maxWidth","backgroundColor","Categoria","navigate","useNavigate","params","useParams","useManager","load","update","store","id","setId","name","setName","title","setTitle","image","setImage","categoria","setCategoria","hasIdade","setHasIdade","hasPelagem","setHasPelagem","hasAndrologia","setHasAndrologia","hasPeso","setHasPeso","hasLitro","setHasLitro","hasRegistro","setHasRegistro","categoriaIdades","setCategoriaIdades","categoriaPelagems","setCategoriaPelagems","categoriaAndrologias","setCategoriaAndrologias","categoriaPesos","setCategoriaPesos","categoriaLitros","setCategoriaLitros","categoriaRegistros","setCategoriaRegistros","idades","setIdades","pelagems","setPelagems","andrologias","setAndrologias","pesos","setPesos","litros","setLitros","registros","setRegistros","categorias","setCategorias","useEffect","loadCategorias","a","api","get","data","newData","map","c","sort","b","handleHasIdades","categoriaIdadesData","ci","_id","handleHasRegistros","categoriaRegistrosData","cr","handleHasPelagems","categoriaPelagemsData","cp","handleHasAndrologias","categoriaAndrologiasData","handleHasPesos","categoriaPesosData","handleHasLitros","categoriaLitrosData","image_url","console","log","Container","Row","Col","Card","CardHeader","Button","onClick","CardBody","Form","placeholder","CustomInput","FormText","checked","idade","xs","sm","includes","prevState","idadeId","pelagem","pelagemId","andrologia","andrologiaId","peso","valor","unidade","pesoId","litro","litroId","registro","registroId","CardFooter","formData","FormData","append"],"mappings":"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","file":"static/js/6.5cb439e9.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/camera.95f820bb.svg\";","/* eslint-disable no-nested-ternary */\nimport React, { useState, useCallback } from 'react';\nimport { FormFeedback, FormGroup, Input, Label } from 'reactstrap';\n\nimport camera from '../../assets/img/camera.svg';\nimport './styles.css';\n\nfunction ImageFileInput({\n  label = 'Selecione uma imagem',\n  previewUrl,\n  onChange,\n  invalid,\n  ...props\n}) {\n  const [preview, setPreview] = useState();\n\n  const handlePreview = useCallback((e) => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      setPreview(null);\n      return;\n    }\n\n    setPreview(encodeURI(URL.createObjectURL(file)));\n\n    if (onChange) {\n      onChange(file);\n    }\n  }, []);\n\n  return (\n    <FormGroup>\n      <Label\n        className=\"image-file-input-container\"\n        style={{\n          border: invalid\n            ? '1px solid var(--danger)'\n            : preview || previewUrl\n              ? '1px solid var(--dark)'\n              : '1px dashed var(--dark)',\n          backgroundImage: `url(${preview || previewUrl})`,\n        }}\n      >\n        {label && !invalid && (\n          <small\n            style={{\n              display: preview || previewUrl ? 'none' : '',\n            }}\n          >\n            {label}\n          </small>\n        )}\n        <img\n          src={camera}\n          alt=\"Selecione uma Imagem\"\n          style={{\n            display: preview || previewUrl ? 'none' : '',\n          }}\n        />\n        <Input\n          type=\"file\"\n          invalid={!!invalid}\n          onChange={handlePreview}\n          hidden\n          {...props}\n        />\n        <FormFeedback className=\"text-center\">{invalid}</FormFeedback>\n      </Label>\n    </FormGroup>\n  );\n}\n\nexport default ImageFileInput;\n","import React from 'react';\n\nfunction Divider({ border, color, width }) {\n  return (\n    <hr\n      style={{\n        border: `${border || '1'}px solid var(--${color || 'secondary'})`,\n        maxWidth: width || '300px',\n        width: width || '100%',\n        backgroundColor: `var(--${color})` || 'var(--secondary)',\n      }}\n    />\n  );\n}\n\nexport default Divider;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Container,\n  CustomInput,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  Row,\n} from 'reactstrap';\n\nimport Divider from '../../components/Divider';\nimport ImageFileInput from '../../components/ImageFileInput';\nimport { useManager } from '../../hooks/manager';\nimport api from '../../services/api';\n\nfunction Categoria() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const { load, update, store } = useManager();\n  const [id, setId] = useState();\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState(null);\n  const [categoria, setCategoria] = useState('');\n  const [hasIdade, setHasIdade] = useState(false);\n  const [hasPelagem, setHasPelagem] = useState(false);\n  const [hasAndrologia, setHasAndrologia] = useState(false);\n  const [hasPeso, setHasPeso] = useState(false);\n  const [hasLitro, setHasLitro] = useState(false);\n  const [hasRegistro, setHasRegistro] = useState(false);\n  const [categoriaIdades, setCategoriaIdades] = useState([]);\n  const [categoriaPelagems, setCategoriaPelagems] = useState([]);\n  const [categoriaAndrologias, setCategoriaAndrologias] = useState([]);\n  const [categoriaPesos, setCategoriaPesos] = useState([]);\n  const [categoriaLitros, setCategoriaLitros] = useState([]);\n  const [categoriaRegistros, setCategoriaRegistros] = useState([]);\n  const [idades, setIdades] = useState([]);\n  const [pelagems, setPelagems] = useState([]);\n  const [andrologias, setAndrologias] = useState([]);\n  const [pesos, setPesos] = useState([]);\n  const [litros, setLitros] = useState([]);\n  const [registros, setRegistros] = useState([]);\n  const [categorias, setCategorias] = useState([]);\n\n  useEffect(() => {\n    load('/categorias');\n  }, [load]);\n\n  const loadCategorias = useCallback(() => {\n    (async () => {\n      const { data } = await api.get('/categorias');\n      const newData = data.map((c) => ({\n        ...c,\n        label: `${c.name} ${\n          c?.categoria?.name ? ` - (${c?.categoria?.name})` : ''\n        }`,\n      }));\n\n      newData.sort((a, b) => (a.label > b.label ? 1 : -1));\n      setCategorias(newData);\n    })();\n  }, []);\n\n  const handleHasIdades = useCallback((value, categoriaIdadesData) => {\n    setHasIdade(value);\n\n    if (categoriaIdadesData) {\n      setCategoriaIdades(categoriaIdadesData.map((ci) => ci._id));\n    }\n\n    if (!value) {\n      setCategoriaIdades([]);\n    }\n\n    if (!idades.length) {\n      (async () => {\n        const { data } = await api.get('/idades');\n        setIdades(data);\n      })();\n    }\n  }, []);\n\n  const handleHasRegistros = useCallback((value, categoriaRegistrosData) => {\n    setHasRegistro(value);\n\n    if (categoriaRegistrosData) {\n      setCategoriaRegistros(categoriaRegistrosData.map((cr) => cr._id));\n    }\n\n    if (!value) {\n      setCategoriaRegistros([]);\n    }\n\n    if (!registros.length) {\n      (async () => {\n        const { data } = await api.get('/registros');\n        setRegistros(data);\n      })();\n    }\n  }, []);\n\n  const handleHasPelagems = useCallback((value, categoriaPelagemsData) => {\n    setHasPelagem(value);\n\n    if (categoriaPelagemsData) {\n      setCategoriaPelagems(categoriaPelagemsData.map((cp) => cp._id));\n    }\n\n    if (!value) {\n      setCategoriaPelagems([]);\n    }\n\n    if (!pelagems.length) {\n      (async () => {\n        const { data } = await api.get('/pelagems');\n        setPelagems(data);\n      })();\n    }\n  }, []);\n\n  const handleHasAndrologias = useCallback((value, categoriaAndrologiasData) => {\n    setHasAndrologia(value);\n\n    if (categoriaAndrologiasData) {\n      setCategoriaAndrologias(categoriaAndrologiasData.map((cp) => cp._id));\n    }\n\n    if (!value) {\n      setCategoriaAndrologias([]);\n    }\n\n    if (!andrologias.length) {\n      (async () => {\n        const { data } = await api.get('/andrologias');\n        setAndrologias(data);\n      })();\n    }\n  }, []);\n\n  const handleHasPesos = useCallback((value, categoriaPesosData) => {\n    setHasPeso(value);\n\n    if (categoriaPesosData) {\n      setCategoriaPesos(categoriaPesosData.map((cp) => cp._id));\n    }\n\n    if (!value) {\n      setCategoriaPesos([]);\n    }\n\n    if (!pesos.length) {\n      (async () => {\n        const { data } = await api.get('/pesos');\n        setPesos(data);\n      })();\n    }\n  }, []);\n\n  const handleHasLitros = useCallback((value, categoriaLitrosData) => {\n    setHasLitro(value);\n\n    if (categoriaLitrosData) {\n      setCategoriaLitros(categoriaLitrosData.map((cp) => cp._id));\n    }\n\n    if (!value) {\n      setCategoriaLitros([]);\n    }\n\n    if (!litros.length) {\n      (async () => {\n        const { data } = await api.get('/litros');\n        setLitros(data);\n      })();\n    }\n  }, []);\n\n  useEffect(() => {\n    loadCategorias();\n    (async () => {\n      try {\n        const { data } = await api.get(`/categorias/${params.id}`);\n        setId(data._id);\n        setName(data.name);\n        setTitle(data.title);\n        setImage(data.image_url);\n        setCategoria(data.categoria._id);\n        handleHasIdades(!!data?.idades?.length, data?.idades);\n        handleHasPelagems(!!data?.pelagems?.length, data?.pelagems);\n        handleHasAndrologias(!!data?.andrologias?.length, data?.andrologias);\n        handleHasPesos(!!data?.pesos?.length, data?.pesos);\n        handleHasLitros(!!data?.litros?.length, data?.litros);\n        handleHasRegistros(!!data?.registros?.length, data?.registros);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  const handleSave = () => {\n    const formData = new FormData();\n\n    console.log(categoriaPesos);\n    formData.append('name', name);\n    formData.append('title', title);\n\n    formData.append('categoria', categoria);\n\n    formData.append('idades', categoriaIdades);\n    formData.append('pelagems', categoriaPelagems);\n    formData.append('andrologias', categoriaAndrologias);\n    formData.append('pesos', categoriaPesos);\n    formData.append('litros', categoriaLitros);\n    formData.append('registros', categoriaRegistros);\n\n    if (image) {\n      formData.append('image', image);\n    }\n\n    if (id) {\n      update(id, '/categorias', formData);\n      return;\n    }\n\n    store('/categorias', formData, () => {\n      navigate('/categorias');\n    });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <Row className=\"mx-2\">\n                <h3>Categoria</h3>\n                <Button onClick={() => navigate('/categorias')} className=\"ml-auto\">\n                  Voltar\n                </Button>\n              </Row>\n            </CardHeader>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Form>\n                <ImageFileInput\n                  previewUrl={image}\n                  onChange={(file) => setImage(file)}\n                />\n                <FormGroup>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Nome\"\n                    value={name}\n                    onChange={({ target: { value } }) => setName(value)}\n                  />\n                </FormGroup>\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"select\"\n                    id=\"categoria\"\n                    name=\"categoria\"\n                    value={categoria}\n                    onChange={({ target: { value } }) => setCategoria(value)}\n                  >\n                    <option value=\"\">Categoria</option>\n                    {categorias.map((c) => (\n                      <option key={c._id} value={c._id}>\n                        {c.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n                <FormGroup>\n                  <Input\n                    id=\"title\"\n                    type=\"text\"\n                    placeholder=\"Título para o próximo nível de categoria\"\n                    value={title}\n                    onChange={({ target: { value } }) => setTitle(value)}\n                  />\n                  <FormText className=\"w-100\">\n                    <p className=\"w-100\">\n                      Quando usuário clicar nessa categoria será exibido esse\n                      título no próximo level de categorias\n                    </p>\n                  </FormText>\n                </FormGroup>\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasIdade\"\n                    name=\"hasIdade\"\n                    label=\"Esta categoria tem idades?\"\n                    checked={hasIdade}\n                    onChange={({ target: { checked } }) => handleHasIdades(checked)}\n                  />\n                </FormGroup>\n                {hasIdade && (\n                  <Row>\n                    {idades.map((idade) => (\n                      <Col xs={12} sm={3} key={idade._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={idade._id}\n                            label={idade.name}\n                            checked={categoriaIdades.includes(idade._id)}\n                            onChange={() => setCategoriaIdades(\n                              (prevState) => (prevState.includes(idade._id)\n                                ? prevState.filter(\n                                  (idadeId) => idadeId !== idade._id,\n                                )\n                                : [...prevState, idade._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasPelagem\"\n                    name=\"hasPelagem\"\n                    label=\"Esta categoria tem pelagem?\"\n                    checked={hasPelagem}\n                    onChange={({ target: { checked } }) => handleHasPelagems(checked)}\n                  />\n                </FormGroup>\n                {hasPelagem && (\n                  <Row>\n                    {pelagems.map((pelagem) => (\n                      <Col xs={12} sm={3} key={pelagem._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={pelagem._id}\n                            label={pelagem.name}\n                            checked={categoriaPelagems.includes(pelagem._id)}\n                            onChange={() => setCategoriaPelagems(\n                              (prevState) => (prevState.includes(pelagem._id)\n                                ? prevState.filter(\n                                  (pelagemId) => pelagemId !== pelagem._id,\n                                )\n                                : [...prevState, pelagem._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasAndrologia\"\n                    name=\"hasAndrologia\"\n                    label=\"Esta categoria tem andrologia?\"\n                    checked={hasAndrologia}\n                    onChange={({ target: { checked } }) => handleHasAndrologias(checked)}\n                  />\n                </FormGroup>\n                {hasAndrologia && (\n                  <Row>\n                    {andrologias.map((andrologia) => (\n                      <Col xs={12} sm={3} key={andrologia._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={andrologia._id}\n                            label={andrologia.name}\n                            checked={categoriaAndrologias.includes(andrologia._id)}\n                            onChange={() => setCategoriaAndrologias(\n                              (prevState) => (prevState.includes(andrologia._id)\n                                ? prevState.filter(\n                                  (andrologiaId) => andrologiaId !== andrologia._id,\n                                )\n                                : [...prevState, andrologia._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasPeso\"\n                    name=\"hasPeso\"\n                    label=\"Esta categoria tem pesos?\"\n                    checked={hasPeso}\n                    onChange={({ target: { checked } }) => handleHasPesos(checked)}\n                  />\n                </FormGroup>\n                {hasPeso && (\n                  <Row>\n                    {pesos.map((peso) => (\n                      <Col xs={12} sm={3} key={peso._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={peso._id}\n                            label={`${peso.valor} ${peso.unidade.name}`}\n                            checked={categoriaPesos.includes(peso._id)}\n                            onChange={() => setCategoriaPesos(\n                              (prevState) => (prevState.includes(peso._id)\n                                ? prevState.filter(\n                                  (pesoId) => pesoId !== peso._id,\n                                )\n                                : [...prevState, peso._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasLitro\"\n                    name=\"hasLitro\"\n                    label=\"Esta categoria tem litros?\"\n                    checked={hasLitro}\n                    onChange={({ target: { checked } }) => handleHasLitros(checked)}\n                  />\n                </FormGroup>\n                {hasLitro && (\n                  <Row>\n                    {litros.map((litro) => (\n                      <Col xs={12} sm={3} key={litro._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={litro._id}\n                            label={`${litro.valor} ${litro.unidade.name}`}\n                            checked={categoriaLitros.includes(litro._id)}\n                            onChange={() => setCategoriaLitros(\n                              (prevState) => (prevState.includes(litro._id)\n                                ? prevState.filter(\n                                  (litroId) => litroId !== litro._id,\n                                )\n                                : [...prevState, litro._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n                <Divider width=\"100%\" />\n                <FormGroup>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"hasRegistro\"\n                    name=\"hasRegistro\"\n                    label=\"Esta categoria tem registros?\"\n                    checked={hasRegistro}\n                    onChange={({ target: { checked } }) => handleHasRegistros(checked)}\n                  />\n                </FormGroup>\n                {hasRegistro && (\n                  <Row>\n                    {registros.map((registro) => (\n                      <Col xs={12} sm={3} key={registro._id}>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id={registro._id}\n                            label={registro.name}\n                            checked={categoriaRegistros.includes(registro._id)}\n                            onChange={() => setCategoriaRegistros(\n                              (prevState) => (prevState.includes(registro._id)\n                                ? prevState.filter(\n                                  (registroId) => registroId !== registro._id,\n                                )\n                                : [...prevState, registro._id]),\n                            )}\n                          />\n                        </FormGroup>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n              </Form>\n            </CardBody>\n            <CardFooter>\n              <Button onClick={handleSave}>\n                Salvar\n              </Button>\n              <Button onClick={() => navigate('/categorias')} className=\"ml-2\">\n                Voltar\n              </Button>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Categoria;\n"],"sourceRoot":""}