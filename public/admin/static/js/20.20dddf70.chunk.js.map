{"version":3,"sources":["app/pages/Unidades/index.js"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","Unidades","useManager","datas","load","destroy","update","store","useState","showModal","setShowModal","id","setId","name","setName","useEffect","handleUpdate","useCallback","data","_id","handleCreate","handleSave","columns","dataField","text","hidden","sort","csvExport","formatter","cell","row","target","color","size","className","onClick","style","width","xs","sm","md","block","keyField","exportCSV","fileName","onlyExportFiltered","exportAll","separator","noAutoBOM","search","props","placeholder","searchProps","pagination","paginationFactory","baseProps","csvProps","isOpen","toggle","centered","type","value","onChange"],"mappings":"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","file":"static/js/20.20dddf70.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  UncontrolledTooltip,\n} from 'reactstrap';\n\nimport { useManager } from '../../hooks/manager';\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction Unidades() {\n  const { datas, load, destroy, update, store } = useManager();\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState();\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    load('/unidades');\n  }, [load]);\n\n  const handleUpdate = useCallback((data) => {\n    setId(data._id);\n    setName(data.name);\n    setShowModal(true);\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    setId(null);\n    setName('');\n    setShowModal(true);\n  }, []);\n\n  const handleSave = useCallback(() => {\n    if (id) {\n      update(id, '/unidades', { name });\n      setShowModal(false);\n      return;\n    }\n\n    store('/unidades', { name });\n    setShowModal(false);\n  }, [id, name]);\n\n  const actions = (cell, row) => (\n    <>\n      <UncontrolledTooltip target={`button-view-${row._id}`}>\n        Alterar\n      </UncontrolledTooltip>\n      <Button\n        id={`button-view-${row._id}`}\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-2 mr-2\"\n        onClick={() => handleUpdate(row)}\n      >\n        <i className=\"fas fa-edit\" />\n      </Button>\n      <UncontrolledTooltip target={`button-delete-${row._id}`}>\n        Excluir\n      </UncontrolledTooltip>\n      <Button\n        id={`button-delete-${row._id}`}\n        color=\"danger\"\n        className=\"mt-2 mr-2\"\n        size=\"sm\"\n        onClick={() => destroy(row._id, '/unidades')}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </>\n  );\n\n  const columns = [\n    {\n      dataField: '_id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'name',\n      text: 'Nome',\n    },\n    {\n      dataField: '#',\n      text: '#',\n      sort: false,\n      csvExport: false,\n      formatter: actions,\n      style: () => ({ width: '120px' }),\n    },\n  ];\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col>\n                  <h3>Unidades</h3>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Row>\n                <Col>\n                  <Row>\n                    <Col xs={12} sm={5} md={3} className=\"mb-3 mb-xl-0\">\n                      <Button block color=\"success\" onClick={handleCreate}>\n                        Cadastrar\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <ToolkitProvider\n                key=\"_id\"\n                keyField=\"_id\"\n                data={datas}\n                columns={columns}\n                exportCSV={{\n                  fileName: 'gadonamao.csv',\n                  onlyExportFiltered: true,\n                  exportAll: false,\n                  separator: ';',\n                  noAutoBOM: false,\n                }}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar placeholder=\"Buscar\" {...props.searchProps} />\n                    <hr />\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                )}\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(!showModal)}\n        centered\n      >\n        <ModalHeader>\n          <strong>Unidade</strong>\n          <Button\n            className=\"close position-absolute top-4 right-4 py-1 px-2\"\n            onClick={() => setShowModal(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </Button>\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Nome\"\n                value={name}\n                onChange={({ target: { value } }) => setName(value)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={handleSave}>Salvar</Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Unidades;\n"],"sourceRoot":""}