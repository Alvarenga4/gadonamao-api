{"version":3,"sources":["app/pages/Pesos/index.js"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","Pesos","useManager","datas","load","destroy","update","store","useState","showModal","setShowModal","id","setId","valor","setValor","unidade","setUnidade","unidades","setUnidades","useEffect","loadUnidades","useCallback","a","api","get","data","sort","b","name","handleUpdate","_id","handleCreate","handleSave","columns","dataField","text","hidden","formatter","cell","row","csvExport","target","color","size","className","onClick","style","width","xs","sm","md","block","keyField","exportCSV","fileName","onlyExportFiltered","exportAll","separator","noAutoBOM","search","props","placeholder","searchProps","pagination","paginationFactory","baseProps","csvProps","isOpen","toggle","centered","type","value","onChange","map","c"],"mappings":"saA6BQA,EAAcC,SAAdD,UACAE,EAAoBC,YAApBD,gBAyNOE,UAvNf,WAAkB,IAAD,EACiCC,cAAxCC,EADO,EACPA,MAAOC,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,OAAQC,EADvB,EACuBA,MADvB,EAEmBC,oBAAS,GAF5B,mBAERC,EAFQ,KAEGC,EAFH,OAGKF,qBAHL,mBAGRG,EAHQ,KAGJC,EAHI,OAIWJ,mBAAS,IAJpB,mBAIRK,EAJQ,KAIDC,EAJC,OAKeN,mBAAS,IALxB,mBAKRO,EALQ,KAKCC,EALD,OAMiBR,mBAAS,IAN1B,mBAMRS,EANQ,KAMEC,GANF,KAQfC,qBAAU,WACRf,EAAK,YACJ,CAACA,IAEJ,IAAMgB,GAAeC,uBAAY,WAC/B,sBAAC,8BAAAC,EAAA,sEACwBC,IAAIC,IAAI,aADhC,iBACSC,EADT,EACSA,MACHC,MAAK,SAACJ,EAAGK,GAAJ,OAAWL,EAAEM,KAAOD,EAAEC,KAAO,GAAK,KAC5CV,GAAYO,GAHb,0CAAD,KAKC,IAEGI,GAAeR,uBAAY,SAACI,GAChCL,KACAR,EAAMa,EAAKK,KACXhB,EAASW,EAAKZ,OACdG,EAAWS,EAAKV,QAAQe,KACxBpB,GAAa,KACZ,IAEGqB,GAAeV,uBAAY,WAC/BD,KACAR,EAAM,MACNE,EAAS,IACTE,EAAW,IACXN,GAAa,KACZ,IAEGsB,GAAaX,uBAAY,WAC7B,GAAIV,EAGF,OAFAL,EAAOK,EAAI,SAAU,CAAEE,QAAOE,iBAC9BL,GAAa,GAIfH,EAAM,SAAU,CAAEM,QAAOE,YACzBL,GAAa,KACZ,CAACC,EAAIE,EAAOE,IA+BTkB,GAAU,CACd,CACEC,UAAW,MACXC,KAAM,KACNC,QAAQ,GAEV,CACEF,UAAW,QACXC,KAAM,QAER,CACED,UAAW,UACXC,KAAM,UACNE,UAAW,SAACC,EAAMC,GAAP,oBAAeA,QAAf,IAAeA,GAAf,UAAeA,EAAKxB,eAApB,aAAe,EAAca,OAE1C,CACEM,UAAW,IACXC,KAAM,IACNT,MAAM,EACNc,WAAW,EACXH,UAjDY,SAACC,EAAMC,GAAP,OACd,qCACE,cAAC,IAAD,CAAqBE,OAAM,sBAAiBF,EAAIT,KAAhD,qBAGA,cAAC,IAAD,CACEnB,GAAE,sBAAiB4B,EAAIT,KACvBY,MAAM,OACNC,KAAK,KACLC,UAAU,YACVC,QAAS,kBAAMhB,GAAaU,IAL9B,SAOE,mBAAGK,UAAU,kBAEf,cAAC,IAAD,CAAqBH,OAAM,wBAAmBF,EAAIT,KAAlD,qBAGA,cAAC,IAAD,CACEnB,GAAE,wBAAmB4B,EAAIT,KACzBY,MAAM,SACNE,UAAU,YACVD,KAAK,KACLE,QAAS,kBAAMxC,EAAQkC,EAAIT,IAAK,WALlC,SAOE,mBAAGc,UAAU,uBA0BfE,MAAO,iBAAO,CAAEC,MAAO,YAI3B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,6CAIN,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGN,UAAU,eAArC,SACE,cAAC,IAAD,CAAQO,OAAK,EAACT,MAAM,UAAUG,QAASd,GAAvC,wCAWhB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAEEqB,SAAS,MACT3B,KAAMtB,EACN8B,QAASA,GACToB,UAAW,CACTC,SAAU,gBACVC,oBAAoB,EACpBC,WAAW,EACXC,UAAW,IACXC,WAAW,GAEbC,QAAM,EAZR,SAcG,SAACC,GAAD,OACC,gCACE,cAAC/D,EAAD,aAAWgE,YAAY,UAAaD,EAAME,cAC1C,uBACA,cAAC,IAAD,aACEC,WAAYC,OACRJ,EAAMK,YAEZ,cAAClE,EAAD,2BAAqB6D,EAAMM,UAA3B,oCArBA,eA+Bd,eAAC,IAAD,CACEC,OAAQ1D,EACR2D,OAAQ,kBAAM1D,GAAcD,IAC5B4D,UAAQ,EAHV,UAKE,eAAC,IAAD,WACE,0CACA,cAAC,IAAD,CACEzB,UAAU,kDACVC,QAAS,kBAAMnC,GAAa,IAF9B,SAIE,mBAAGkC,UAAU,sBAGjB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE0B,KAAK,OACLT,YAAY,QACZU,MAAO1D,EACP2D,SAAU,gBAAaD,EAAb,EAAG9B,OAAU8B,MAAb,OAA2BzD,EAASyD,QAGlD,cAAC,IAAD,UACE,eAAC,IAAD,CACED,KAAK,SACL3D,GAAG,UACHiB,KAAK,UACL2C,MAAOxD,EACPyD,SAAU,gBAAaD,EAAb,EAAG9B,OAAU8B,MAAb,OAA2BvD,EAAWuD,IALlD,UAOE,wBAAQA,MAAM,GAAd,sBACCtD,EAASwD,KAAI,SAACC,GAAD,OACZ,wBAAoBH,MAAOG,EAAE5C,IAA7B,SACG4C,EAAE9C,MADQ8C,EAAE5C,kBAQzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQe,QAASb,GAAjB","file":"static/js/18.063678ba.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Container,\n  CustomInput,\n  Form,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  UncontrolledTooltip,\n} from 'reactstrap';\n\nimport { useManager } from '../../hooks/manager';\nimport api from '../../services/api';\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction Pesos() {\n  const { datas, load, destroy, update, store } = useManager();\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState();\n  const [valor, setValor] = useState('');\n  const [unidade, setUnidade] = useState('');\n  const [unidades, setUnidades] = useState([]);\n\n  useEffect(() => {\n    load('/pesos');\n  }, [load]);\n\n  const loadUnidades = useCallback(() => {\n    (async () => {\n      const { data } = await api.get('/unidades');\n      data.sort((a, b) => (a.name > b.name ? 1 : -1));\n      setUnidades(data);\n    })();\n  }, []);\n\n  const handleUpdate = useCallback((data) => {\n    loadUnidades();\n    setId(data._id);\n    setValor(data.valor);\n    setUnidade(data.unidade._id);\n    setShowModal(true);\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    loadUnidades();\n    setId(null);\n    setValor('');\n    setUnidade('');\n    setShowModal(true);\n  }, []);\n\n  const handleSave = useCallback(() => {\n    if (id) {\n      update(id, '/pesos', { valor, unidade });\n      setShowModal(false);\n      return;\n    }\n\n    store('/pesos', { valor, unidade });\n    setShowModal(false);\n  }, [id, valor, unidade]);\n\n  const actions = (cell, row) => (\n    <>\n      <UncontrolledTooltip target={`button-view-${row._id}`}>\n        Alterar\n      </UncontrolledTooltip>\n      <Button\n        id={`button-view-${row._id}`}\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-2 mr-2\"\n        onClick={() => handleUpdate(row)}\n      >\n        <i className=\"fas fa-edit\" />\n      </Button>\n      <UncontrolledTooltip target={`button-delete-${row._id}`}>\n        Excluir\n      </UncontrolledTooltip>\n      <Button\n        id={`button-delete-${row._id}`}\n        color=\"danger\"\n        className=\"mt-2 mr-2\"\n        size=\"sm\"\n        onClick={() => destroy(row._id, '/pesos')}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </>\n  );\n\n  const columns = [\n    {\n      dataField: '_id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'valor',\n      text: 'Nome',\n    },\n    {\n      dataField: 'unidade',\n      text: 'Unidade',\n      formatter: (cell, row) => row?.unidade?.name,\n    },\n    {\n      dataField: '#',\n      text: '#',\n      sort: false,\n      csvExport: false,\n      formatter: actions,\n      style: () => ({ width: '120px' }),\n    },\n  ];\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col>\n                  <h3>Pesos</h3>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Row>\n                <Col>\n                  <Row>\n                    <Col xs={12} sm={5} md={3} className=\"mb-3 mb-xl-0\">\n                      <Button block color=\"success\" onClick={handleCreate}>\n                        Cadastrar\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <ToolkitProvider\n                key=\"_id\"\n                keyField=\"_id\"\n                data={datas}\n                columns={columns}\n                exportCSV={{\n                  fileName: 'gadonamao.csv',\n                  onlyExportFiltered: true,\n                  exportAll: false,\n                  separator: ';',\n                  noAutoBOM: false,\n                }}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar placeholder=\"Buscar\" {...props.searchProps} />\n                    <hr />\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                )}\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(!showModal)}\n        centered\n      >\n        <ModalHeader>\n          <strong>Peso</strong>\n          <Button\n            className=\"close position-absolute top-4 right-4 py-1 px-2\"\n            onClick={() => setShowModal(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </Button>\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Valor\"\n                value={valor}\n                onChange={({ target: { value } }) => setValor(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <CustomInput\n                type=\"select\"\n                id=\"unidade\"\n                name=\"unidade\"\n                value={unidade}\n                onChange={({ target: { value } }) => setUnidade(value)}\n              >\n                <option value=\"\">Unidades</option>\n                {unidades.map((c) => (\n                  <option key={c._id} value={c._id}>\n                    {c.name}\n                  </option>\n                ))}\n              </CustomInput>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={handleSave}>Salvar</Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Pesos;\n"],"sourceRoot":""}