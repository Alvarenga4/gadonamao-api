{"version":3,"sources":["app/routes/app.routes.js","app/routes/auth.routes.js","App.js","index.js","app/constants/auth.js","app/services/api.js","app/hooks/auth.js","app/components/Notification/index.js","app/hooks/manager.js","app/constants/app.js","app/contexts/app.js"],"names":["Layout","React","lazy","AppRoutes","path","element","Login","AuthRoutes","loading","className","style","zIndex","Spinner","type","App","isAuthenticated","useAuth","fallback","ReactDOM","render","document","getElementById","TOKEN_KEY","ID_KEY","USER_NAME","api","axios","create","baseURL","process","interceptors","request","use","a","config","token","localStorage","getItem","id","headers","Authorization","AuthContext","createContext","context","useContext","Error","AuthProvider","children","useState","userToken","setUserToken","setIsAuthenticated","notificationRef","useRef","useEffect","get","console","log","current","notify","message","color","response","data","value","useMemo","signIn","user","setItem","_id","name","signOut","delete","removeItem","Provider","ref","Notification","_props","notification","useImperativeHandle","place","title","icon","autoDismiss","closeButton","options","notificationAlert","forwardRef","ManagerContext","ManagerProvider","alert","setAlert","datas","setDatas","setLoading","handlerError","useCallback","error","load","url","onSuccess","onError","res","store","post","d","update","put","filter","destroy","danger","onCancel","showCancel","showCloseButton","confirmBtnBsStyle","confirmBtnText","cancelBtnBsStyle","cancelBtnText","reverseButtons","onConfirm","useManager","SIDEBARSHOW","AppContext","AppProvider","sidebarShow","setSidebarShow","toggleSidebar","prevState","minimizeSidebar"],"mappings":"yTAIMA,EAASC,IAAMC,MAAK,kBAAM,wDASjBC,EAPG,kBAChB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACL,EAAD,MACzB,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAAS,cAACL,EAAD,UCLvBM,EAAQL,IAAMC,MAAK,kBAAM,wDAShBK,EAPW,kBACxB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAK,SAASC,QAAS,cAACC,EAAD,MAC9B,cAAC,IAAD,CAAOF,KAAK,eAAeC,QAAS,cAACC,EAAD,UCMlCE,G,mCACJ,qBACEC,UAAU,iHACVC,MAAO,CAAEC,OAAQ,QAFnB,SAIE,cAACC,EAAA,EAAD,CAASC,KAAK,YAsBHC,EAlBH,WAAO,IACTC,EAAoBC,cAApBD,gBAER,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUE,SAAUT,EAApB,SACGO,EACC,cAAC,IAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,S,QC5BVG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,gCCb1B,sGAAO,IAAMC,EAAY,SACZC,EAAS,SACTC,EAAY,a,sFCGnBC,EAAMC,IAAMC,OAAO,CACvBC,QAASC,2CAGXJ,EAAIK,aAAaC,QAAQC,IAAzB,+BAAAC,EAAA,MAA6B,WAAOC,GAAP,iBAAAD,EAAA,6DACrBE,EAAQC,aAAaC,QAAQf,KAC7BgB,EAAKF,aAAaC,QAAQd,KAE5BY,IACFD,EAAOK,QAAQC,cAAf,iBAAyCL,GACzCD,EAAOK,QAAQD,GAAKA,GANK,kBAQpBJ,GARoB,2CAA7B,uDAWeT,O,6ICPTgB,EAAcC,0BA2EP1B,EAAU,WACrB,IAAM2B,EAAUC,qBAAWH,GAE3B,IAAKE,EACH,MAAM,IAAIE,MAAM,8CAGlB,OAAOF,GAGMG,IAnFM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,MADN,mBAC9BC,EAD8B,KACnBC,EADmB,OAESF,oBAAS,GAFlB,mBAE9BjC,EAF8B,KAEboC,EAFa,KAG/BC,EAAkBC,mBAExBC,qBAAU,WACHL,EAKL,sBAAC,4BAAAhB,EAAA,mEAEOgB,EAFP,gCAGWxB,IAAI8B,IAAJ,wBAAyBN,IAHpC,OAIKE,GAAmB,GAJxB,0DAOGK,QAAQC,IAAR,MACAN,GAAmB,GACE,kBAAV,EAAP,GATP,wBAUKC,EAAgBM,QAAQC,OAAO,CAC7BC,QAAQ,EAAD,GACPC,MAAO,WAZd,2BAiBO,MAAS,KAAMC,WACTF,EAAY,KAAME,SAASC,KAA3BH,UAENR,EAAgBM,QAAQC,OAAO,CAC7BC,UACAC,MAAO,WAtBhB,wDAAD,GAJEV,GAAmB,KAgCpB,CAACF,IAEJ,IAAMe,EAAQC,mBACZ,iBAAO,CACLlD,kBACAmD,OAAQ,SAAC/B,EAAOgC,GACd/B,aAAagC,QAAQ9C,IAAWa,GAChCC,aAAagC,QAAQ7C,IAAQ4C,EAAK7B,IAAM6B,EAAKE,KAC7CjC,aAAagC,QAAQ5C,IAAW2C,EAAKG,MACrCpB,EAAaf,IAEfoC,QAAQ,WAAD,4BAAE,sBAAAtC,EAAA,sEACDR,IAAI+C,OAAJ,kBAAsBvB,IADrB,OAEPb,aAAaqC,WAAWnD,KACxBc,aAAaqC,WAAWlD,KACxBa,aAAaqC,WAAWjD,KACxB0B,EAAa,MALN,2CAAF,kDAAC,MAQV,CAACD,EAAWlC,IAOd,OAJAuC,qBAAU,WACRJ,EAAad,aAAaC,QAAQf,QACjC,IAGD,eAACmB,EAAYiC,SAAb,CAAsBV,MAAOA,EAA7B,UACE,cAAC,IAAD,CAAcW,IAAKvB,IAClBL,O,gCCnFP,mCAGA,SAAS6B,EAAaC,EAAQF,GAC5B,IAAMG,EAAezB,mBAqBrB,OAnBA0B,8BAAoBJ,GAAK,iBAAO,CAC9BhB,OAAQ,YAAuE,IAApEqB,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,MAAOrB,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,MAAOqB,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACpDC,EAAU,CACdL,MAAOA,GAAS,KAChBpB,QACE,sBAAKnD,UAAU,qBAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BwE,GAAS,aACxC,+BAAOrB,OAGX/C,KAAMgD,GAAS,UACfqB,KAAMA,GAAQ,cACdC,YAAaA,GAAe,EAC5BC,eAEFN,EAAapB,QAAQ4B,kBAAkBD,QAIpC,cAAC,IAAD,CAAmBV,IAAKG,IAGlBS,yBAAWX,I,gMCfbY,EAAiB9C,0BAEjB+C,EAAkB,SAAC,GAAkB,IAAhB1C,EAAe,EAAfA,SAAe,EACrBC,mBAAS,MADY,mBACxC0C,EADwC,KACjCC,EADiC,OAErB3C,mBAAS,IAFY,mBAExC4C,EAFwC,KAEjCC,EAFiC,OAGjB7C,oBAAS,GAHQ,mBAGxCxC,EAHwC,KAG/BsF,EAH+B,KAIzC1C,EAAkBC,mBAElB0C,EAAeC,uBAAY,SAACC,EAAOhB,GACvC,GAAqB,kBAAVgB,EAAX,CASA,GAAIA,GAASA,EAAMnC,SAAU,CAAC,IACpBF,EAAYqC,EAAMnC,SAASC,KAA3BH,QACR,GAAIA,EAMF,YALAR,EAAgBM,QAAQC,OAAO,CAC7BsB,QACArB,UACAC,MAAO,WAMbT,EAAgBM,QAAQC,OAAO,CAC7BC,QAASqB,EACTpB,MAAO,gBAtBPT,EAAgBM,QAAQC,OAAO,CAC7BsB,QACArB,QAASqC,EACTpC,MAAO,aAqBV,IAEGqC,EAAOF,uBACX,SAACG,EAAKC,EAAWC,GACXF,GACF,sBAAC,4BAAAlE,EAAA,sEAEG6D,GAAW,GAFd,SAGqBrE,IAAI8B,IAAI4C,GAH7B,OAGSG,EAHT,OAIGT,EAASS,EAAIvC,MAITqC,GACFA,IAEFN,GAAW,GAXd,kDAaOO,GACFA,EAAQ,EAAD,IAETP,GAAW,GACXC,EAAa,EAAD,GAAQ,8BAjBvB,yDAAD,KAsBJ,CAACA,IAGGQ,EAAQP,uBACZ,SAACG,EAAKpC,EAAMqC,EAAWC,GACjBF,GAAOpC,GACT,sBAAC,4BAAA9B,EAAA,sEAEG6D,GAAW,GAFd,SAGqBrE,IAAI+E,KAAKL,EAAKpC,GAHnC,OAGSuC,EAHT,OAIGT,GAAS,SAACY,GAAD,OAAQH,EAAIvC,MAAZ,mBAAqB0C,OAC9BrD,EAAgBM,QAAQC,OAAO,CAC7BC,QAAS,8BAEPwC,GACFA,IAEFN,GAAW,GAXd,kDAaOO,GACFA,EAAQ,EAAD,IAETP,GAAW,GACXC,EAAa,EAAD,GAAQ,sBAjBvB,yDAAD,KAsBJ,CAACA,IAGGW,EAASV,uBACb,SAAC1D,EAAI6D,EAAKpC,EAAMqC,EAAWC,GACrB/D,GAAM6D,GAAOpC,GACf,sBAAC,4BAAA9B,EAAA,sEAEG6D,GAAW,GAFd,SAGqBrE,IAAIkF,IAAJ,UAAWR,EAAX,YAAkB7D,GAAMyB,GAH7C,OAGSuC,EAHT,OAIGT,GAAS,SAACY,GAAD,OACPH,EAAIvC,MADG,mBAEJ0C,EAAEG,QAAO,SAAC5C,GAAD,OAAYA,EAAM1B,IAAM0B,EAAMK,OAAS/B,UAErDc,EAAgBM,QAAQC,OAAO,CAC7BC,QAAS,4BAEPwC,GACFA,IAEFN,GAAW,GAdd,kDAgBOO,GACFA,EAAQ,EAAD,IAETP,GAAW,GACXC,EAAa,EAAD,GAAQ,oBApBvB,yDAAD,KAyBJ,CAACA,IAGGc,EAAUb,uBACd,SAAC1D,EAAI6D,EAAKC,EAAWC,GACf/D,GAAM6D,GACR,sBAAC,sBAAAlE,EAAA,sDACC,IACE0D,EACE,cAAC,IAAD,CACEmB,QAAM,EACN7B,MAAM,UACN8B,SAAU,kBAAMpB,EAAS,OACzBqB,YAAU,EACVC,iBAAe,EACfC,kBAAkB,SAClBC,eAAe,UACfC,iBAAiB,OACjBC,cAAc,WACdC,gBAAc,EACdC,UAAS,sBAAE,sBAAAtF,EAAA,sEAEP6D,GAAW,GAFJ,SAGDrE,IAAI+C,OAAJ,UAAc2B,EAAd,YAAqB7D,IAHpB,OAIPuD,GAAS,SAACY,GAAD,OAAOA,EAAEG,QAAO,SAAC5C,GAAD,OAAYA,EAAM1B,IAAM0B,EAAMK,OAAS/B,QAChEqD,EAAS,MACTvC,EAAgBM,QAAQC,OAAO,CAC7BC,QAAS,yBAEPwC,GACFA,IAEFN,GAAW,GAZJ,kDAcHO,GACFA,EAAQ,EAAD,IAETP,GAAW,GACXC,EAAa,EAAD,GAAQ,oBAlBb,0DAXb,SAiCE,wEAGJ,MAAOE,GACHI,GACFA,EAAQJ,GAEVH,GAAW,GACXC,EAAaE,EAAO,oBA5CvB,0CAAD,KAiDJ,CAACF,IAGG/B,EAAQC,mBACZ,iBAAO,CACLzD,UACAoF,QACAC,WACAK,OACAK,QACAG,SACAG,aAEF,CAACrG,EAASoF,EAAOC,EAAUK,EAAMK,EAAOG,EAAQG,IAGlD,OACE,eAACrB,EAAed,SAAhB,CAAyBV,MAAOA,EAAhC,UACG0B,EACD,cAAC,IAAD,CAAcf,IAAKvB,IAClBL,MAKMyE,EAAa,WACxB,IAAM7E,EAAUC,qBAAW4C,GAE3B,IAAK7C,EACH,MAAM,IAAIE,MAAM,oDAGlB,OAAOF,I,qFC5NI8E,EAAc,e,OCUdC,EAAahF,0BAmCXiF,IAjCK,SAAC,GAAkB,IAAhB5E,EAAe,EAAfA,SAAe,EACEC,mBAAS,UADX,mBAC7B4E,EAD6B,KAChBC,EADgB,KAG9BC,EAAgB9B,uBAAY,WAChC6B,GAAe,SAACE,GAEd,OADA3F,aAAagC,QAAQqD,EAA2B,WAAdM,EAAyB,SAAW,UACjD,WAAdA,EAAyB,SAAW,cAE5C,IAEGC,EAAkBhC,uBAAY,WAClC6B,GAAe,WAEb,OADAzF,aAAagC,QAAQqD,EAAa,aAC3B,iBAER,IAEHnE,qBAAU,WACRuE,EAAezF,aAAaC,QAAQoF,IAAgB,YACnD,IAEH,IAAMzD,EAAQC,mBACZ,iBAAO,CACL2D,cACAE,gBACAE,qBAEF,CAACJ,IAGH,OAAO,cAACF,EAAWhD,SAAZ,CAAqBV,MAAOA,EAA5B,SAAoCjB,O","file":"static/js/main.8d65cdd1.chunk.js","sourcesContent":["import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\n// Pages\nconst Layout = React.lazy(() => import('../layout'));\n\nconst AppRoutes = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />} />\n    <Route path=\"*\" element={<Layout />} />\n  </Routes>\n);\n\nexport default AppRoutes;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\n// Pages\nconst Login = React.lazy(() => import('../pages/Login'));\n\nexport const AuthRoutes = () => (\n  <Routes>\n    <Route path=\"admin/\" element={<Login />} />\n    <Route path=\"admin/:token\" element={<Login />} />\n  </Routes>\n);\n\nexport default AuthRoutes;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\n\nimport { useAuth } from './app/hooks/auth';\nimport { ManagerProvider } from './app/hooks/manager';\nimport AppRoutes from './app/routes/app.routes';\nimport AuthRoutes from './app/routes/auth.routes';\n\nimport 'react-notification-alert/dist/animate.css';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport './app/assets/vendor/fontawesome-free-5.15.2-web/css/all.min.css';\nimport './app/assets/css/bootstrap.css';\nimport './app/assets/css/custom.css';\n\nconst loading = (\n  <div\n    className=\"bg-primary opacity-7 d-flex w-100 vh-100 align-items-center justify-content-center position-fixed left-0 top-0\"\n    style={{ zIndex: 999999 }}\n  >\n    <Spinner type=\"grow\" />\n  </div>\n);\n\nconst App = () => {\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Router>\n      <Suspense fallback={loading}>\n        {isAuthenticated ? (\n          <ManagerProvider>\n            <AppRoutes />\n          </ManagerProvider>\n        ) : (\n          <AuthRoutes />\n        )}\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport AppProvider from './app/contexts/app';\nimport AuthProvider from './app/hooks/auth';\n\nReactDOM.render(\n  <AppProvider>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n","export const TOKEN_KEY = '@token';\nexport const ID_KEY = '@idkey';\nexport const USER_NAME = '@username';\n","/* eslint-disable no-param-reassign */\nimport axios from 'axios';\n\nimport { TOKEN_KEY, ID_KEY } from '../constants/auth';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\napi.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  const id = localStorage.getItem(ID_KEY);\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    config.headers.id = id;\n  }\n  return config;\n});\n\nexport default api;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react';\n\nimport Notification from '../components/Notification';\nimport { ID_KEY, TOKEN_KEY, USER_NAME } from '../constants/auth';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [userToken, setUserToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const notificationRef = useRef();\n\n  useEffect(() => {\n    if (!userToken) {\n      setIsAuthenticated(false);\n      return;\n    }\n\n    (async () => {\n      try {\n        if (userToken) {\n          await api.get(`/tokens-admin/${userToken}`);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.log(error);\n        setIsAuthenticated(false);\n        if (typeof error === 'string') {\n          notificationRef.current.notify({\n            message: error,\n            color: 'danger',\n          });\n          return;\n        }\n\n        if (error && error.response) {\n          const { message } = error.response.data;\n          if (message) {\n            notificationRef.current.notify({\n              message,\n              color: 'danger',\n            });\n          }\n        }\n      }\n    })();\n  }, [userToken]);\n\n  const value = useMemo(\n    () => ({\n      isAuthenticated,\n      signIn: (token, user) => {\n        localStorage.setItem(TOKEN_KEY, token);\n        localStorage.setItem(ID_KEY, user.id || user._id);\n        localStorage.setItem(USER_NAME, user.name);\n        setUserToken(token);\n      },\n      signOut: async () => {\n        await api.delete(`/tokens/${userToken}`);\n        localStorage.removeItem(TOKEN_KEY);\n        localStorage.removeItem(ID_KEY);\n        localStorage.removeItem(USER_NAME);\n        setUserToken(null);\n      },\n    }),\n    [userToken, isAuthenticated],\n  );\n\n  useEffect(() => {\n    setUserToken(localStorage.getItem(TOKEN_KEY));\n  }, []);\n\n  return (\n    <AuthContext.Provider value={value}>\n      <Notification ref={notificationRef} />\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  return context;\n};\n\nexport default AuthProvider;\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport NotificationAlert from 'react-notification-alert';\n\nfunction Notification(_props, ref) {\n  const notification = useRef();\n\n  useImperativeHandle(ref, () => ({\n    notify: ({ place, title, message, color, icon, autoDismiss, closeButton }) => {\n      const options = {\n        place: place || 'tr',\n        message: (\n          <div className=\"d-flex flex-column\">\n            <span className=\"alert-title\">{title || 'Mensagem'}</span>\n            <span>{message}</span>\n          </div>\n        ),\n        type: color || 'success',\n        icon: icon || 'fas fa-bell',\n        autoDismiss: autoDismiss || 5,\n        closeButton,\n      };\n      notification.current.notificationAlert(options);\n    },\n  }));\n\n  return <NotificationAlert ref={notification} />;\n}\n\nexport default forwardRef(Notification);\n","import React, {\n  createContext,\n  useState,\n  useCallback,\n  useMemo,\n  useContext,\n  useRef,\n} from 'react';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nimport Notification from '../components/Notification';\nimport api from '../services/api';\n\nexport const ManagerContext = createContext();\n\nexport const ManagerProvider = ({ children }) => {\n  const [alert, setAlert] = useState(null);\n  const [datas, setDatas] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const notificationRef = useRef();\n\n  const handlerError = useCallback((error, title) => {\n    if (typeof error === 'string') {\n      notificationRef.current.notify({\n        title,\n        message: error,\n        color: 'danger',\n      });\n      return;\n    }\n\n    if (error && error.response) {\n      const { message } = error.response.data;\n      if (message) {\n        notificationRef.current.notify({\n          title,\n          message,\n          color: 'danger',\n        });\n        return;\n      }\n    }\n\n    notificationRef.current.notify({\n      message: title,\n      color: 'danger',\n    });\n  }, []);\n\n  const load = useCallback(\n    (url, onSuccess, onError) => {\n      if (url) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.get(url);\n            setDatas(res.data);\n            /* notificationRef.current.notify({\n            message: 'Carregado com sucesso!!!',\n          }); */\n            if (onSuccess) {\n              onSuccess();\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao carregar os dados');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const store = useCallback(\n    (url, data, onSuccess, onError) => {\n      if (url && data) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.post(url, data);\n            setDatas((d) => [res.data, ...d]);\n            notificationRef.current.notify({\n              message: 'Cadastrado com sucesso!!!',\n            });\n            if (onSuccess) {\n              onSuccess();\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao Cadastrar');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const update = useCallback(\n    (id, url, data, onSuccess, onError) => {\n      if (id && url && data) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.put(`${url}/${id}`, data);\n            setDatas((d) => [\n              res.data,\n              ...d.filter((value) => (value.id || value._id) !== id),\n            ]);\n            notificationRef.current.notify({\n              message: 'Alterado com sucesso!!!',\n            });\n            if (onSuccess) {\n              onSuccess();\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao alterar');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const destroy = useCallback(\n    (id, url, onSuccess, onError) => {\n      if (id && url) {\n        (async () => {\n          try {\n            setAlert(\n              <SweetAlert\n                danger\n                title=\"Confirm\"\n                onCancel={() => setAlert(null)}\n                showCancel\n                showCloseButton\n                confirmBtnBsStyle=\"danger\"\n                confirmBtnText=\"Excluir\"\n                cancelBtnBsStyle=\"link\"\n                cancelBtnText=\"Cancelar\"\n                reverseButtons\n                onConfirm={async () => {\n                  try {\n                    setLoading(true);\n                    await api.delete(`${url}/${id}`);\n                    setDatas((d) => d.filter((value) => (value.id || value._id) !== id));\n                    setAlert(null);\n                    notificationRef.current.notify({\n                      message: 'Excluido com sucesso',\n                    });\n                    if (onSuccess) {\n                      onSuccess();\n                    }\n                    setLoading(false);\n                  } catch (error) {\n                    if (onError) {\n                      onError(error);\n                    }\n                    setLoading(false);\n                    handlerError(error, 'Falha ao excluir');\n                  }\n                }}\n              >\n                <strong>Tem certeza que deseja excluir?</strong>\n              </SweetAlert>,\n            );\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao excluir');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const value = useMemo(\n    () => ({\n      loading,\n      datas,\n      setDatas,\n      load,\n      store,\n      update,\n      destroy,\n    }),\n    [loading, datas, setDatas, load, store, update, destroy],\n  );\n\n  return (\n    <ManagerContext.Provider value={value}>\n      {alert}\n      <Notification ref={notificationRef} />\n      {children}\n    </ManagerContext.Provider>\n  );\n};\n\nexport const useManager = () => {\n  const context = useContext(ManagerContext);\n\n  if (!context) {\n    throw new Error('useManager must be used within a ManagerProvider');\n  }\n\n  return context;\n};\n\nexport default ManagerProvider;\n","export const SIDEBARSHOW = '@sidebarshow';\n","import React, {\n  useState,\n  createContext,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\n\nimport { SIDEBARSHOW } from '../constants/app';\n\nexport const AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [sidebarShow, setSidebarShow] = useState('opened');\n\n  const toggleSidebar = useCallback(() => {\n    setSidebarShow((prevState) => {\n      localStorage.setItem(SIDEBARSHOW, prevState === 'opened' ? 'closed' : 'opened');\n      return prevState === 'opened' ? 'closed' : 'opened';\n    });\n  }, []);\n\n  const minimizeSidebar = useCallback(() => {\n    setSidebarShow(() => {\n      localStorage.setItem(SIDEBARSHOW, 'minimized');\n      return 'minimized';\n    });\n  }, []);\n\n  useEffect(() => {\n    setSidebarShow(localStorage.getItem(SIDEBARSHOW) || 'opened');\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      sidebarShow,\n      toggleSidebar,\n      minimizeSidebar,\n    }),\n    [sidebarShow],\n  );\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\nexport default AppProvider;\n"],"sourceRoot":""}