{"version":3,"sources":["app/components/GoToTop/index.js","app/pages/Users/index.js"],"names":["GoToTop","useState","show","setShow","useEffect","showGoToTop","document","body","scrollTop","documentElement","addEventListener","removeEventListener","handleTop","useCallback","in","className","id","color","onClick","SearchBar","Search","ExportCSVButton","CSVExport","Users","setId","name","setName","email","setEmail","whatsapp","setWhatsapp","approved","setApproved","showModal","setShowModal","useManager","datas","load","destroy","update","store","setLoading","useContext","AppContext","notificationRef","useRef","handleUpdate","data","_id","handleCreate","handleSave","user","handleRepprovedNotify","userId","a","api","get","message","current","notify","console","log","response","columns","dataField","text","hidden","sort","isMobile","formatter","cell","row","target","align","style","width","csvFormatter","csvExport","size","ref","xs","sm","md","block","keyField","exportCSV","fileName","onlyExportFiltered","exportAll","separator","noAutoBOM","search","props","placeholder","searchProps","pagination","paginationFactory","baseProps","csvProps","isOpen","toggle","centered","for","type","value","onChange"],"mappings":"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","file":"static/js/10.b74fd1ca.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { Fade, Button } from 'reactstrap';\n\nfunction GoToTop() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const showGoToTop = () => {\n      setShow(\n        document.body.scrollTop > 150\n          || document.documentElement.scrollTop > 150,\n      );\n    };\n    document.addEventListener('scroll', showGoToTop, false);\n\n    return () => document.removeEventListener('scroll', showGoToTop, false);\n  }, []);\n\n  const handleTop = useCallback(() => {\n    document.body.scrollTop = 0; // For Safari\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  }, []);\n\n  return (\n    <Fade in={show} className=\"z-index-99999\">\n      <Button\n        id=\"go-to-top\"\n        color=\"primary\"\n        className=\"position-fixed bottom-5 right-5 rounded-circle opacity-6 z-index-99999\"\n        onClick={handleTop}\n      >\n        <i className=\"fas fa-arrow-up\" />\n      </Button>\n    </Fade>\n  );\n}\n\nexport default GoToTop;\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useCallback, useRef, useContext } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit';\nimport { isMobile } from 'react-device-detect';\nimport {\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Row,\n  Button,\n  UncontrolledTooltip,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CardFooter,\n} from 'reactstrap';\n\nimport GoToTop from '../../components/GoToTop';\nimport Notification from '../../components/Notification';\nimport { AppContext } from '../../contexts/app';\nimport { useManager } from '../../hooks/manager';\nimport api from '../../services/api';\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction Users() {\n  const [id, setId] = useState();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [whatsapp, setWhatsapp] = useState('');\n  const [approved, setApproved] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const { datas, load, destroy, update, store } = useManager();\n  const { setLoading } = useContext(AppContext);\n  const notificationRef = useRef();\n\n  useEffect(() => {\n    load('/users');\n  }, [load]);\n\n  const handleUpdate = useCallback((data) => {\n    setId(data._id);\n    setEmail(data.email);\n    setWhatsapp(data.whatsapp);\n    setName(data.name);\n    setApproved(data.approved);\n    setShowModal(true);\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    setId(null);\n    setEmail('');\n    setWhatsapp('');\n    setName('');\n    setApproved(null);\n    setShowModal(true);\n  }, []);\n\n  const handleSave = useCallback(() => {\n    const user = {\n      name,\n      email,\n      whatsapp,\n    };\n    if (id) {\n      update(id, '/users');\n      setShowModal(false);\n      return;\n    }\n\n    store('/users', user);\n    setShowModal(false);\n  }, []);\n\n  const handleRepprovedNotify = useCallback((userId) => {\n    (async () => {\n      try {\n        setLoading(true);\n        const { data: { message } } = await api.get(`/repproved-notify/${userId}`);\n        setLoading(false);\n        notificationRef?.current?.notify({\n          message,\n        });\n      } catch (error) {\n        console.log(error);\n\n        if (error && error.response) {\n          const { message } = error.response.data;\n          if (message) {\n            notificationRef?.current?.notify({\n              message,\n              color: 'danger',\n            });\n            return;\n          }\n        }\n\n        notificationRef?.current?.notify({\n          message: 'Falha na tentativa de notificar o usuário da reprovação do seu cadastro. Avise o administrador do sistema',\n        });\n      }\n    })();\n  }, []);\n\n  const statusFormatter = (cell, row) => (row.approved ? (\n    <>\n      <UncontrolledTooltip target={`approve-${row._id}`}>\n        Aprovado\n      </UncontrolledTooltip>\n      <i\n        id={`approve-${row._id}`}\n        className=\"fas fa-thumbs-up text-success mt-2\"\n      />\n    </>\n  ) : (\n    <>\n      <UncontrolledTooltip target={`approve-${row._id}`}>\n        Reprovado\n      </UncontrolledTooltip>\n      <i\n        id={`approve-${row._id}`}\n        className=\"fas fa-thumbs-down text-danger mt-2\"\n      />\n    </>\n  ));\n\n  const actions = (cell, row) => (\n    <>\n      <UncontrolledTooltip target={`button-view-${row._id}`}>\n        Alterar\n      </UncontrolledTooltip>\n      <Button\n        id={`button-view-${row._id}`}\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-2 mr-2\"\n        onClick={() => handleUpdate(row)}\n      >\n        <i className=\"fas fa-edit\" />\n      </Button>\n      {row.approved ? (\n        <>\n          <UncontrolledTooltip target={`button-approve-${row._id}`}>\n            Reprovar\n          </UncontrolledTooltip>\n          <Button\n            id={`button-approve-${row._id}`}\n            color=\"warning\"\n            className=\"mt-2 mr-2 text-white\"\n            size=\"sm\"\n            onClick={() => update(row._id, '/users', { approved: false })}\n          >\n            <i className=\"fas fa-thumbs-down\" />\n          </Button>\n        </>\n      ) : (\n        <>\n          <UncontrolledTooltip target={`button-approve-${row._id}`}>\n            Aprovar\n          </UncontrolledTooltip>\n          <Button\n            id={`button-approve-${row._id}`}\n            color=\"success\"\n            className=\"mt-2 mr-2\"\n            size=\"sm\"\n            onClick={() => update(row._id, '/users', { approved: true })}\n          >\n            <i className=\"fas fa-thumbs-up\" />\n          </Button>\n          <UncontrolledTooltip target={`button-notify-${row._id}`}>\n            Notificar cadastro reprovado\n          </UncontrolledTooltip>\n          <Button\n            id={`button-notify-${row._id}`}\n            color=\"danger\"\n            className=\"mt-2 mr-2\"\n            size=\"sm\"\n            onClick={() => handleRepprovedNotify(row._id)}\n          >\n            <i className=\"fas fa-times-circle\" />\n          </Button>\n        </>\n      )}\n      <UncontrolledTooltip target={`button-delete-${row._id}`}>\n        Excluir\n      </UncontrolledTooltip>\n      <Button\n        id={`button-delete-${row._id}`}\n        color=\"danger\"\n        className=\"mt-2 mr-2\"\n        size=\"sm\"\n        onClick={() => destroy(row._id, '/users')}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </>\n  );\n\n  const columns = [\n    {\n      dataField: '_id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'name',\n      text: 'Nome',\n      sort: true,\n    },\n    {\n      dataField: 'email',\n      text: 'email',\n      hidden: isMobile,\n    },\n    {\n      dataField: 'approved',\n      text: 'Status',\n      sort: false,\n      formatter: statusFormatter,\n      align: 'center',\n      style: () => ({ width: '50px' }),\n      csvFormatter: (cell, row) => (row.approved ? 'Sim' : 'Não'),\n    },\n    {\n      dataField: '#',\n      text: '#',\n      sort: false,\n      csvExport: false,\n      formatter: actions,\n      style: () => ({ width: '120px' }),\n    },\n    {\n      dataField: 'whatsapp',\n      text: 'Whatsapp',\n      hidden: true,\n    },\n  ];\n\n  return (\n    <Container>\n      <Notification ref={notificationRef} />\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col>\n                  <h3>Usuários</h3>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Row>\n                <Col>\n                  <Row>\n                    <Col xs={12} sm={5} md={3} className=\"mb-3 mb-xl-0\">\n                      <Button block color=\"success\" onClick={handleCreate}>\n                        Cadastrar\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <ToolkitProvider\n                key=\"_id\"\n                keyField=\"_id\"\n                data={datas}\n                columns={columns}\n                exportCSV={{\n                  fileName: 'gadonamao-usuarios.csv',\n                  onlyExportFiltered: true,\n                  exportAll: false,\n                  separator: ';',\n                  noAutoBOM: false,\n                }}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar placeholder=\"Buscar\" {...props.searchProps} />\n                    <hr />\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                )}\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <GoToTop />\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(!showModal)}\n        centered\n      >\n        <ModalHeader>\n          <strong>Usuário</strong>\n          <Button\n            className=\"close position-absolute top-4 right-4 py-1 px-2\"\n            onClick={() => setShowModal(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </Button>\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"name\">Nome</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Nome\"\n                value={name}\n                onChange={({ target: { value } }) => setName(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"text\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={({ target: { value } }) => setEmail(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"whatsapp\">Whatsapp</Label>\n              <Input\n                id=\"whatsapp\"\n                type=\"text\"\n                placeholder=\"whatsapp\"\n                value={whatsapp}\n                onChange={({ target: { value } }) => setWhatsapp(value)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={handleSave}>\n            Salvar\n          </Button>\n          {approved === null ? null : (\n            approved ? (\n              <Button\n                color=\"warning\"\n                className=\"ml-auto text-white\"\n                onClick={() => update(id, '/users', { approved: false })}\n              >\n                <i className=\"fas fa-thumbs-down\" />\n                {' '}\n                Reprovar\n              </Button>\n            ) : (\n              <Button\n                color=\"success\"\n                className=\"ml-auto\"\n                onClick={() => update(id, '/users', { approved: true })}\n              >\n                <i className=\"fas fa-thumbs-up\" />\n                {' '}\n                Aprovar\n              </Button>\n            )\n          )}\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Users;\n"],"sourceRoot":""}