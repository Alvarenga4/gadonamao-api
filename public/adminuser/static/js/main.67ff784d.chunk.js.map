{"version":3,"sources":["app/routes/app.routes.js","app/routes/auth.routes.js","App.js","index.js","app/constants/auth.js","app/services/api.js","app/constants/app.js","app/components/Notification/index.js","app/hooks/auth.js","app/components/FullScreenLoader/index.js","app/contexts/app.js","app/hooks/manager.js"],"names":["Layout","React","lazy","AppRoutes","path","element","Login","AuthRoutes","loading","className","style","zIndex","Spinner","type","App","isAuthenticated","useAuth","fallback","ReactDOM","render","document","getElementById","TOKEN_KEY","ID_KEY","USER_NAME","api","axios","create","baseURL","process","interceptors","request","use","a","config","token","localStorage","getItem","id","headers","Authorization","SIDEBARSHOW","ANUNCIO_DATA","Notification","_props","ref","notification","useRef","useImperativeHandle","notify","place","title","message","color","icon","autoDismiss","closeButton","options","current","notificationAlert","forwardRef","AuthContext","createContext","context","useContext","Error","AuthProvider","children","useState","userToken","setUserToken","setIsAuthenticated","notificationRef","useEffect","get","console","log","response","data","value","useMemo","signIn","user","setItem","_id","name","signOut","delete","removeItem","Provider","Loader","AppContext","AppProvider","setLoading","sidebarShow","setSidebarShow","toggleSidebar","useCallback","prevState","minimizeSidebar","ManagerContext","ManagerProvider","alert","setAlert","datas","setDatas","handlerError","error","load","url","onSuccess","onError","res","store","post","d","update","put","filter","destroy","danger","onCancel","showCancel","showCloseButton","confirmBtnBsStyle","confirmBtnText","cancelBtnBsStyle","cancelBtnText","reverseButtons","onConfirm","useManager"],"mappings":"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","file":"static/js/main.67ff784d.chunk.js","sourcesContent":["import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\n// Pages\nconst Layout = React.lazy(() => import('../layout'));\n\nconst AppRoutes = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />} />\n    <Route path=\"*\" element={<Layout />} />\n  </Routes>\n);\n\nexport default AppRoutes;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\n// Pages\nconst Login = React.lazy(() => import('../pages/Login'));\n\nexport const AuthRoutes = () => (\n  <Routes>\n    <Route path=\"/\" element={<Login />} />\n  </Routes>\n);\n\nexport default AuthRoutes;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\n\nimport { useAuth } from './app/hooks/auth';\nimport { ManagerProvider } from './app/hooks/manager';\nimport AppRoutes from './app/routes/app.routes';\nimport AuthRoutes from './app/routes/auth.routes';\n\nimport 'react-notification-alert/dist/animate.css';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport './app/assets/vendor/fontawesome-free-5.15.2-web/css/all.min.css';\nimport './app/assets/css/bootstrap.css';\nimport './app/assets/css/custom.css';\n\nconst loading = (\n  <div\n    className=\"bg-primary opacity-7 d-flex w-100 vh-100 align-items-center justify-content-center position-fixed left-0 top-0\"\n    style={{ zIndex: 999999 }}\n  >\n    <Spinner type=\"grow\" />\n  </div>\n);\n\nconst App = () => {\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Router>\n      <Suspense fallback={loading}>\n        {isAuthenticated ? (\n          <ManagerProvider>\n            <AppRoutes />\n          </ManagerProvider>\n        ) : (\n          <AuthRoutes />\n        )}\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport AppProvider from './app/contexts/app';\nimport AuthProvider from './app/hooks/auth';\n\nReactDOM.render(\n  <AppProvider>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n","export const TOKEN_KEY = '@token';\nexport const ID_KEY = '@idkey';\nexport const USER_NAME = '@username';\n","/* eslint-disable no-param-reassign */\nimport axios from 'axios';\n\nimport { TOKEN_KEY, ID_KEY } from '../constants/auth';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\napi.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem(TOKEN_KEY);\n  const id = localStorage.getItem(ID_KEY);\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    config.headers.id = id;\n  }\n  return config;\n});\n\nexport default api;\n","export const SIDEBARSHOW = '@sidebarshow';\nexport const ANUNCIO_DATA = '@anuncio_data';\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport NotificationAlert from 'react-notification-alert';\n\nfunction Notification(_props, ref) {\n  const notification = useRef();\n\n  useImperativeHandle(ref, () => ({\n    notify: ({ place, title, message, color, icon, autoDismiss, closeButton }) => {\n      const options = {\n        place: place || 'tr',\n        message: (\n          <div className=\"d-flex flex-column\">\n            <span className=\"alert-title\">{title || 'Mensagem'}</span>\n            <span>{message}</span>\n          </div>\n        ),\n        type: color || 'success',\n        icon: icon || 'fas fa-bell',\n        autoDismiss: autoDismiss || 5,\n        closeButton,\n      };\n      notification.current.notificationAlert(options);\n    },\n  }));\n\n  return <NotificationAlert ref={notification} />;\n}\n\nexport default forwardRef(Notification);\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react';\n\nimport Notification from '../components/Notification';\nimport { ID_KEY, TOKEN_KEY, USER_NAME } from '../constants/auth';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [userToken, setUserToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const notificationRef = useRef();\n\n  useEffect(() => {\n    if (!userToken) {\n      setIsAuthenticated(false);\n      return;\n    }\n\n    (async () => {\n      try {\n        if (userToken) {\n          await api.get(`/tokens/${userToken}`);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.log(error);\n        setIsAuthenticated(false);\n        if (typeof error === 'string') {\n          notificationRef.current.notify({\n            message: error,\n            color: 'danger',\n          });\n          return;\n        }\n\n        if (error && error.response) {\n          const { message } = error.response.data;\n          if (message) {\n            notificationRef.current.notify({\n              message,\n              color: 'danger',\n            });\n          }\n        }\n      }\n    })();\n  }, [userToken]);\n\n  const value = useMemo(\n    () => ({\n      isAuthenticated,\n      signIn: (token, user) => {\n        localStorage.setItem(TOKEN_KEY, token);\n        localStorage.setItem(ID_KEY, user.id || user._id);\n        localStorage.setItem(USER_NAME, user.name);\n        setUserToken(token);\n      },\n      signOut: async () => {\n        await api.delete(`/tokens/${userToken}`);\n        localStorage.removeItem(TOKEN_KEY);\n        localStorage.removeItem(ID_KEY);\n        localStorage.removeItem(USER_NAME);\n        setUserToken(null);\n      },\n    }),\n    [userToken, isAuthenticated],\n  );\n\n  useEffect(() => {\n    setUserToken(localStorage.getItem(TOKEN_KEY));\n  }, []);\n\n  return (\n    <AuthContext.Provider value={value}>\n      <Notification ref={notificationRef} />\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  return context;\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nfunction Loader({ loading }) {\n  if (loading) {\n    return (\n      <div\n        className=\"bg-primary opacity-7 d-flex w-100 vh-100 align-items-center justify-content-center position-fixed left-0 top-0\"\n        style={{ zIndex: 999999 }}\n      >\n        <Spinner type=\"grow\" />\n      </div>\n    );\n  }\n\n  return null;\n}\n\nexport default Loader;\n","import React, {\n  useState,\n  createContext,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\n\nimport Loader from '../components/FullScreenLoader';\nimport { SIDEBARSHOW } from '../constants/app';\n\nexport const AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [sidebarShow, setSidebarShow] = useState('opened');\n\n  const toggleSidebar = useCallback(() => {\n    setSidebarShow((prevState) => {\n      localStorage.setItem(SIDEBARSHOW, prevState === 'opened' ? 'closed' : 'opened');\n      return prevState === 'opened' ? 'closed' : 'opened';\n    });\n  }, []);\n\n  const minimizeSidebar = useCallback(() => {\n    setSidebarShow(() => {\n      localStorage.setItem(SIDEBARSHOW, 'minimized');\n      return 'minimized';\n    });\n  }, []);\n\n  useEffect(() => {\n    setSidebarShow(localStorage.getItem(SIDEBARSHOW) || 'opened');\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      sidebarShow,\n      toggleSidebar,\n      minimizeSidebar,\n      setLoading,\n    }),\n    [sidebarShow],\n  );\n\n  return (\n    <AppContext.Provider value={value}>\n      <Loader loading={loading} />\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import React, {\n  createContext,\n  useState,\n  useCallback,\n  useMemo,\n  useContext,\n  useRef,\n} from 'react';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nimport Notification from '../components/Notification';\nimport api from '../services/api';\n\nexport const ManagerContext = createContext();\n\nexport const ManagerProvider = ({ children }) => {\n  const [alert, setAlert] = useState(null);\n  const [datas, setDatas] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const notificationRef = useRef();\n\n  const handlerError = useCallback((error, title) => {\n    if (typeof error === 'string') {\n      notificationRef.current.notify({\n        title,\n        message: error,\n        color: 'danger',\n      });\n      return;\n    }\n\n    if (error && error.response) {\n      const { message } = error.response.data;\n      if (message) {\n        notificationRef.current.notify({\n          title,\n          message,\n          color: 'danger',\n        });\n        return;\n      }\n    }\n\n    notificationRef.current.notify({\n      message: title,\n      color: 'danger',\n    });\n  }, []);\n\n  const load = useCallback(\n    (url, onSuccess, onError) => {\n      if (url) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.get(url);\n            setDatas(res.data);\n            /* notificationRef.current.notify({\n            message: 'Carregado com sucesso!!!',\n          }); */\n            if (onSuccess) {\n              onSuccess();\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao carregar os dados');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const store = useCallback(\n    (url, data, onSuccess, onError) => {\n      if (url && data) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.post(url, data);\n            setDatas((d) => [res.data, ...d]);\n            notificationRef.current.notify({\n              message: 'Cadastrado com sucesso!!!',\n            });\n            if (onSuccess) {\n              onSuccess(res.data);\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao Cadastrar');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const update = useCallback(\n    (id, url, data, onSuccess, onError) => {\n      if (id && url && data) {\n        (async () => {\n          try {\n            setLoading(true);\n            const res = await api.put(`${url}/${id}`, data);\n            setDatas((d) => [\n              res.data,\n              ...d.filter((value) => (value.id || value._id) !== id),\n            ]);\n            notificationRef.current.notify({\n              message: 'Alterado com sucesso!!!',\n            });\n            if (onSuccess) {\n              onSuccess(res.data);\n            }\n            setLoading(false);\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao alterar');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const destroy = useCallback(\n    (id, url, onSuccess, onError) => {\n      if (id && url) {\n        (async () => {\n          try {\n            setAlert(\n              <SweetAlert\n                danger\n                title=\"Confirm\"\n                onCancel={() => setAlert(null)}\n                showCancel\n                showCloseButton\n                confirmBtnBsStyle=\"danger\"\n                confirmBtnText=\"Excluir\"\n                cancelBtnBsStyle=\"link\"\n                cancelBtnText=\"Cancelar\"\n                reverseButtons\n                onConfirm={async () => {\n                  try {\n                    setLoading(true);\n                    await api.delete(`${url}/${id}`);\n                    setDatas((d) => d.filter((value) => (value.id || value._id) !== id));\n                    setAlert(null);\n                    notificationRef.current.notify({\n                      message: 'Excluido com sucesso',\n                    });\n                    if (onSuccess) {\n                      onSuccess();\n                    }\n                    setLoading(false);\n                  } catch (error) {\n                    if (onError) {\n                      onError(error);\n                    }\n                    setLoading(false);\n                    handlerError(error, 'Falha ao excluir');\n                  }\n                }}\n              >\n                <strong>Tem certeza que deseja excluir?</strong>\n              </SweetAlert>,\n            );\n          } catch (error) {\n            if (onError) {\n              onError(error);\n            }\n            setLoading(false);\n            handlerError(error, 'Falha ao excluir');\n          }\n        })();\n      }\n    },\n    [handlerError],\n  );\n\n  const value = useMemo(\n    () => ({\n      loading,\n      datas,\n      setDatas,\n      load,\n      store,\n      update,\n      destroy,\n    }),\n    [loading, datas, setDatas, load, store, update, destroy],\n  );\n\n  return (\n    <ManagerContext.Provider value={value}>\n      {alert}\n      <Notification ref={notificationRef} />\n      {children}\n    </ManagerContext.Provider>\n  );\n};\n\nexport const useManager = () => {\n  const context = useContext(ManagerContext);\n\n  if (!context) {\n    throw new Error('useManager must be used within a ManagerProvider');\n  }\n\n  return context;\n};\n\nexport default ManagerProvider;\n"],"sourceRoot":""}