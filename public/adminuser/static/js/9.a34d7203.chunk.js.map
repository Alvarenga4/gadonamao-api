{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","app/pages/Anuncio/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Anuncio","navigate","useNavigate","setLoading","useContext","AppContext","useState","categorias","setCategorias","idade","setIdade","pelagem","setPelagem","andrologia","setAndrologia","peso","setPeso","litro","setLitro","registro","setRegistro","hasIdade","setHasIdade","hasPelagem","setHasPelagem","hasAndrologia","setHasAndrologia","hasPeso","setHasPeso","hasLitro","setHasLitro","hasRegistro","setHasRegistro","selectedCategorias","setSelectedCategorias","renderCategorias","setRenderCategorias","showButton","setShowButton","useEffect","a","api","get","data","console","log","handleSelectedCategoria","useCallback","level","parentId","categoria","scs","sc","JSON","parse","localStorage","getItem","ANUNCIO_DATA","cId","_id","find","c","nextLevel","name","idades","rcs","Component","title","map","xs","sm","md","className","onClick","active","block","selectedIdade","pelagems","selectedPelagem","p","andrologias","selectedAndrologia","pesos","selectedPeso","valor","unidade","litros","selectedLitro","l","registros","selectedRegistro","r","sort","b","index","setItem","stringify"],"mappings":"sKAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,uPCicMQ,UA/cf,WACE,IAAMC,EAAWC,cACTC,EAAeC,qBAAWC,KAA1BF,WAFS,EAImBG,mBAAS,IAJ5B,mBAIVC,EAJU,KAIEC,EAJF,OAKSF,mBAAS,IALlB,mBAKVG,EALU,KAKHC,EALG,OAMaJ,mBAAS,IANtB,mBAMVK,EANU,KAMDC,EANC,OAOmBN,mBAAS,IAP5B,mBAOVO,EAPU,KAOEC,EAPF,OAQOR,mBAAS,IARhB,mBAQVS,EARU,KAQJC,EARI,OASSV,mBAAS,IATlB,mBASVW,EATU,KASHC,EATG,OAUeZ,mBAAS,IAVxB,mBAUVa,EAVU,KAUAC,EAVA,OAWed,oBAAS,GAXxB,mBAWVe,EAXU,KAWAC,EAXA,QAYmBhB,oBAAS,GAZ5B,qBAYViB,GAZU,MAYEC,GAZF,SAayBlB,oBAAS,GAblC,qBAaVmB,GAbU,MAaKC,GAbL,SAcapB,oBAAS,GAdtB,qBAcVqB,GAdU,MAcDC,GAdC,SAeetB,oBAAS,GAfxB,qBAeVuB,GAfU,MAeAC,GAfA,SAgBqBxB,oBAAS,GAhB9B,qBAgBVyB,GAhBU,MAgBGC,GAhBH,SAiBmC1B,mBAAS,IAjB5C,qBAiBV2B,GAjBU,MAiBUC,GAjBV,SAkB+B5B,mBAAS,IAlBxC,qBAkBV6B,GAlBU,MAkBQC,GAlBR,SAmBmB9B,oBAAS,GAnB5B,qBAmBV+B,GAnBU,MAmBEC,GAnBF,MAqBjBC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAE0BC,IAAIC,IAAI,eAFlC,gBAEWC,EAFX,EAEWA,KACRnC,EAAcmC,GAHjB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,KAQC,IAEH,IAAMC,GAA0BC,uBAAY,SAACC,EAAOC,EAAUC,GAC5DhB,IAAsB,SAACiB,GAGrB,OAFAP,QAAQC,IAAIM,GAEN,GAAN,mBACKA,EAAIjE,QACL,SAACkE,GAAD,OAAQA,EAAGJ,MAAQA,MAFvB,CAGK,CAAEA,QAAOC,WAAUC,oBAGzB,IAgVH,OAxTAX,qBAAU,WACR,IAAMI,EAAOU,KAAKC,MAAMC,aAAaC,QAAQC,MAC7Cb,QAAQC,IAAIF,GACRA,IACFjC,EAASiC,EAAKlC,MAAQkC,EAAKlC,MAAQ,IACnCG,EAAW+B,EAAKhC,QAAUgC,EAAKhC,QAAU,IACzCG,EAAc6B,EAAK9B,WAAa8B,EAAK9B,WAAa,IAClDG,EAAQ2B,EAAK5B,KAAO4B,EAAK5B,KAAO,IAChCG,EAASyB,EAAK1B,MAAQ0B,EAAK1B,MAAQ,IACnCG,EAAYuB,EAAKxB,SAAWwB,EAAKxB,SAAW,IAC5Ce,GAAsBS,EAAKV,mBAAqBU,EAAKV,mBAAqB,OAE3E,CAAC1B,IAEJgC,qBAAU,WACRH,GAAoB,IACpBE,IAAc,GACdhB,GAAY,GACZE,IAAc,GACdE,IAAiB,GACjBE,IAAW,GACXE,IAAY,GACZE,IAAe,GAEfC,GAAmBpC,SAAQ,YAAkC,IAAb6D,EAAY,EAA9BR,UAAaS,IACzC,sBAAC,sCAAAnB,EAAA,mEAEOP,GAAmBtC,OAF1B,oBAGKQ,GAAW,KACL+C,EAAY3C,EAAWqD,MAAK,SAACC,GAAD,OAAOA,EAAEF,MAAQD,MAJxD,wBAOaI,GAAY,UAAA7B,GAAmB2B,MACnC,SAACR,GAAD,OAAQA,EAAGF,UAAUS,MAAQT,EAAUS,cADvB,eAEfX,OAAQ,EATlB,SAU8BP,IAAIC,IAAJ,sBAAuBgB,EAAvB,gBAV9B,gBAUef,EAVf,EAUeA,KAERC,QAAQC,IAAIiB,EAAWZ,EAAUa,KAAjC,UAAuCb,EAAUc,cAAjD,aAAuC,EAAkBrE,QAErDgD,GAAQA,EAAKhD,OACfyC,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,kBACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,6BACGhB,EAAUiB,OAASjB,EAAUa,SAGlC,cAAC,IAAD,UACE,cAAC,IAAD,UACGpB,EAAKyB,KAAI,SAACP,GAAD,OACR,cAAC,IAAD,CAAKQ,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAM3B,GACbgB,EACAZ,EAAUS,IACVE,IAEFa,SACIzC,GAAmB2B,MACnB,SAACR,GAAD,OAAQA,EAAGF,UAAUS,MAAQE,EAAEF,OAGnCgB,OAAK,EAXP,SAaGd,EAAEE,QAdyBF,EAAEF,0BA2BpDrB,IAAc,GAGZY,EAAUc,QAAUd,EAAUc,OAAOrE,SACvC2B,GAAY,GACZc,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGU,EAAH,EAAGA,cAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,0CAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACG1B,EAAUc,OAAOI,KAAI,SAAC3E,GAAD,OACpB,cAAC,IAAD,CAAK4E,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAM/D,EAASjB,EAAEkE,MAC1Be,OAAQjF,EAAEkE,MAAQiB,EAClBD,OAAK,EAHP,SAKGlF,EAAEsE,QANyBtE,EAAEkE,2BAoBlDT,EAAU2B,UAAY3B,EAAU2B,SAASlF,SAC3C6B,IAAc,GACdY,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGY,EAAH,EAAGA,gBAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,4CAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACG5B,EAAU2B,SAAST,KAAI,SAACW,GAAD,OACtB,cAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAM7D,EAAWmE,EAAEpB,MAC5Be,OAAQK,EAAEpB,MAAQmB,EAClBH,OAAK,EAHP,SAKGI,EAAEhB,QANyBgB,EAAEpB,2BAoBlDT,EAAU8B,aAAe9B,EAAU8B,YAAYrF,SACjD+B,IAAiB,GACjBU,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGe,EAAH,EAAGA,mBAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,+CAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACG/B,EAAU8B,YAAYZ,KAAI,SAAC5B,GAAD,OACzB,cAAC,IAAD,CAAK6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAM3D,EAAc0B,EAAEmB,MAC/Be,OAAQlC,EAAEmB,MAAQsB,EAClBN,OAAK,EAHP,SAKGnC,EAAEuB,QANyBvB,EAAEmB,2BAoBlDT,EAAUgC,OAAShC,EAAUgC,MAAMvF,SACrCiC,IAAW,GACXQ,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGiB,EAAH,EAAGA,aAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,yCAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACGjC,EAAUgC,MAAMd,KAAI,SAACW,GAAD,OACnB,cAAC,IAAD,CAAKV,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAMzD,EAAQ+D,EAAEpB,MACzBe,OAAQK,EAAEpB,MAAQwB,EAClBR,OAAK,EAHP,mBAKMI,EAAEK,MALR,YAKiBL,EAAEM,QAAQtB,SANGgB,EAAEpB,2BAoBlDT,EAAUoC,QAAUpC,EAAUoC,OAAO3F,SACvCmC,IAAY,GACZM,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGqB,EAAH,EAAGA,cAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,0CAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACGrC,EAAUoC,OAAOlB,KAAI,SAACoB,GAAD,OACpB,cAAC,IAAD,CAAKnB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAMvD,EAASsE,EAAE7B,MAC1Be,OAAQc,EAAE7B,MAAQ4B,EAClBZ,OAAK,EAHP,mBAKMa,EAAEJ,MALR,YAKiBI,EAAEH,QAAQtB,SANGyB,EAAE7B,2BAoBlDT,EAAUuC,WAAavC,EAAUuC,UAAU9F,SAC7CqC,IAAe,GACfI,IAAoB,SAAC6B,GAAD,4BACfA,GADe,CAElB,CACEjB,MAAOc,EACPI,UAAW,gBAAGwB,EAAH,EAAGA,iBAAH,OACT,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,6CAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACGxC,EAAUuC,UAAUrB,KAAI,SAACuB,GAAD,OACvB,cAAC,IAAD,CAAKtB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAeC,UAAU,OAAjD,SACE,cAAC,IAAD,CACEC,QAAS,kBAAMrD,EAAYuE,EAAEhC,MAC7Be,OAAQiB,EAAEhC,MAAQ+B,EAClBf,OAAK,EAHP,SAKGgB,EAAE5B,QANyB4B,EAAEhC,2BAjQ7D,QAqRKxD,GAAW,GArRhB,0DAwRGA,GAAW,GACXyC,QAAQC,IAAR,MAzRH,yDAAD,QA6RD,CAACZ,KAGF,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,0DAKR,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,yDAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACG1B,EAAW6D,KACV,SAAClB,GAAD,OAAgBA,EAAUA,WAC1B,cAAC,IAAD,CACEmB,GAAI,GACJC,GAAI,EACJC,GAAI,EAEJC,UAAU,OALZ,SAOE,cAAC,IAAD,CACEC,QAAS,kBAAM3B,GAAwB,EAAG,GAAII,IAC9CwB,SACQzC,GAAmB2B,MACnB,SAACR,GAAD,OAAQA,EAAGF,UAAUS,MAAQT,EAAUS,OAG/CgB,OAAK,EAPP,SASGzB,EAAUa,QAZRb,EAAUS,mBAsB5BxB,GACEyD,MAAK,SAACpD,EAAGqD,GAAJ,OAAUrD,EAAEQ,MAAQ6C,EAAE7C,SAC3BoB,KAAI,WAAgB0B,GAAhB,IAAG5B,EAAH,EAAGA,UAAH,OACH,cAAC,IAAD,UACE,cAACA,EAAD,CACEU,cAAenE,EACfqE,gBAAiBnE,EACjBsE,mBAAoBpE,EACpBsE,aAAcpE,EACdwE,cAAetE,EACfyE,iBAAkBvE,KAPX2E,MAWdzD,MACMhB,GAAaA,GAAYZ,MACzBc,IAAeA,IAAcZ,MAC7Bc,IAAkBA,IAAiBZ,MACnCc,IAAYA,IAAWZ,MACvBc,IAAaA,IAAYZ,MACzBc,IAAgBA,IAAeZ,IAClC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKqD,UAAU,+BAAf,UACE,cAAC,IAAD,CAAQC,QAvZP,WACjBxE,EAAS,cAsZO,sBACA,cAAC,IAAD,CAAQwE,QApZP,WACjB,IAAI9B,EAAOU,KAAKC,MAAMC,aAAaC,QAAQC,MAC3Cd,EAAI,2BACCA,GADD,IAEFlC,QACAE,UACAE,aACAE,OACAE,QACAE,WACAc,wBAGFW,QAAQC,IAAIF,GACZY,aAAawC,QAAQtC,IAAcJ,KAAK2C,UAAUrD,IAClD1C,EAAS,sBAqYO","file":"static/js/9.a34d7203.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useEffect, useState, useCallback, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Container,\n  CardFooter,\n  Row,\n  Fade,\n} from 'reactstrap';\n\nimport { ANUNCIO_DATA } from '../../constants/app';\nimport { AppContext } from '../../contexts/app';\n// import { useManager } from '../../hooks/manager';\nimport api from '../../services/api';\n\nfunction Anuncio() {\n  const navigate = useNavigate();\n  const { setLoading } = useContext(AppContext);\n  // const { update, store } = useManager();\n  const [categorias, setCategorias] = useState([]);\n  const [idade, setIdade] = useState('');\n  const [pelagem, setPelagem] = useState('');\n  const [andrologia, setAndrologia] = useState('');\n  const [peso, setPeso] = useState('');\n  const [litro, setLitro] = useState('');\n  const [registro, setRegistro] = useState('');\n  const [hasIdade, setHasIdade] = useState(false);\n  const [hasPelagem, setHasPelagem] = useState(false);\n  const [hasAndrologia, setHasAndrologia] = useState(false);\n  const [hasPeso, setHasPeso] = useState(false);\n  const [hasLitro, setHasLitro] = useState(false);\n  const [hasRegistro, setHasRegistro] = useState(false);\n  const [selectedCategorias, setSelectedCategorias] = useState([]);\n  const [renderCategorias, setRenderCategorias] = useState([]);\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await api.get('/categorias');\n        setCategorias(data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  const handleSelectedCategoria = useCallback((level, parentId, categoria) => {\n    setSelectedCategorias((scs) => {\n      console.log(scs);\n\n      return [\n        ...scs.filter(\n          (sc) => sc.level < level,\n        ), { level, parentId, categoria },\n      ];\n    });\n  }, []);\n\n  const handlePrev = () => {\n    navigate('/anuncios');\n  };\n\n  const handleNext = () => {\n    let data = JSON.parse(localStorage.getItem(ANUNCIO_DATA));\n    data = {\n      ...data,\n      idade,\n      pelagem,\n      andrologia,\n      peso,\n      litro,\n      registro,\n      selectedCategorias,\n    };\n\n    console.log(data);\n    localStorage.setItem(ANUNCIO_DATA, JSON.stringify(data));\n    navigate('/anuncio-detalhes');\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(ANUNCIO_DATA));\n    console.log(data);\n    if (data) {\n      setIdade(data.idade ? data.idade : '');\n      setPelagem(data.pelagem ? data.pelagem : '');\n      setAndrologia(data.andrologia ? data.andrologia : '');\n      setPeso(data.peso ? data.peso : '');\n      setLitro(data.litro ? data.litro : '');\n      setRegistro(data.registro ? data.registro : '');\n      setSelectedCategorias(data.selectedCategorias ? data.selectedCategorias : []);\n    }\n  }, [categorias]);\n\n  useEffect(() => {\n    setRenderCategorias([]);\n    setShowButton(false);\n    setHasIdade(false);\n    setHasPelagem(false);\n    setHasAndrologia(false);\n    setHasPeso(false);\n    setHasLitro(false);\n    setHasRegistro(false);\n\n    selectedCategorias.forEach(({ categoria: { _id: cId } }) => {\n      (async () => {\n        try {\n          if (selectedCategorias.length) {\n            setLoading(true);\n            const categoria = categorias.find((c) => c._id === cId);\n\n            if (categoria) {\n              const nextLevel = selectedCategorias.find(\n                (sc) => sc.categoria._id === categoria._id,\n              )?.level + 1;\n              const { data } = await api.get(`/categorias/${cId}/categorias`);\n\n              console.log(nextLevel, categoria.name, categoria.idades?.length);\n\n              if (data && data.length) {\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: () => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>\n                                {categoria.title || categoria.name}\n                              </h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {data.map((c) => (\n                                  <Col xs={12} sm={6} md={3} key={c._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => handleSelectedCategoria(\n                                        nextLevel,\n                                        categoria._id,\n                                        c,\n                                      )}\n                                      active={\n                                        !!selectedCategorias.find(\n                                          (sc) => sc.categoria._id === c._id,\n                                        )\n                                      }\n                                      block\n                                    >\n                                      {c.name}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              } else {\n                setShowButton(true);\n              }\n\n              if (categoria.idades && categoria.idades.length) {\n                setHasIdade(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedIdade }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Idades</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.idades.map((i) => (\n                                  <Col xs={12} sm={6} md={3} key={i._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setIdade(i._id)}\n                                      active={i._id === selectedIdade}\n                                      block\n                                    >\n                                      {i.name}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n\n              if (categoria.pelagems && categoria.pelagems.length) {\n                setHasPelagem(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedPelagem }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Pelagens</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.pelagems.map((p) => (\n                                  <Col xs={12} sm={6} md={3} key={p._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setPelagem(p._id)}\n                                      active={p._id === selectedPelagem}\n                                      block\n                                    >\n                                      {p.name}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n\n              if (categoria.andrologias && categoria.andrologias.length) {\n                setHasAndrologia(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedAndrologia }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Andrologias</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.andrologias.map((a) => (\n                                  <Col xs={12} sm={6} md={3} key={a._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setAndrologia(a._id)}\n                                      active={a._id === selectedAndrologia}\n                                      block\n                                    >\n                                      {a.name}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n\n              if (categoria.pesos && categoria.pesos.length) {\n                setHasPeso(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedPeso }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Pesos</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.pesos.map((p) => (\n                                  <Col xs={12} sm={6} md={3} key={p._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setPeso(p._id)}\n                                      active={p._id === selectedPeso}\n                                      block\n                                    >\n                                      {`${p.valor} ${p.unidade.name}`}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n\n              if (categoria.litros && categoria.litros.length) {\n                setHasLitro(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedLitro }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Litros</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.litros.map((l) => (\n                                  <Col xs={12} sm={6} md={3} key={l._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setLitro(l._id)}\n                                      active={l._id === selectedLitro}\n                                      block\n                                    >\n                                      {`${l.valor} ${l.unidade.name}`}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n\n              if (categoria.registros && categoria.registros.length) {\n                setHasRegistro(true);\n                setRenderCategorias((rcs) => [\n                  ...rcs,\n                  {\n                    level: nextLevel,\n                    Component: ({ selectedRegistro }) => (\n                      <Row>\n                        <Col>\n                          <Card>\n                            <CardHeader>\n                              <h5>Registros</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <Row>\n                                {categoria.registros.map((r) => (\n                                  <Col xs={12} sm={6} md={3} key={r._id} className=\"py-2\">\n                                    <Button\n                                      onClick={() => setRegistro(r._id)}\n                                      active={r._id === selectedRegistro}\n                                      block\n                                    >\n                                      {r.name}\n                                    </Button>\n                                  </Col>\n                                ))}\n                              </Row>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    ),\n                  },\n                ]);\n              }\n            }\n            setLoading(false);\n          }\n        } catch (error) {\n          setLoading(false);\n          console.log(error);\n        }\n      })();\n    });\n  }, [selectedCategorias]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <h3>Criar Anúncio</h3>\n            </CardHeader>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <h5>Escolha uma Categoria</h5>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                {categorias.map(\n                  (categoria) => !categoria.categoria && (\n                  <Col\n                    xs={12}\n                    sm={6}\n                    md={3}\n                    key={categoria._id}\n                    className=\"py-2\"\n                  >\n                    <Button\n                      onClick={() => handleSelectedCategoria(1, '', categoria)}\n                      active={\n                            !!selectedCategorias.find(\n                              (sc) => sc.categoria._id === categoria._id,\n                            )\n                          }\n                      block\n                    >\n                      {categoria.name}\n                    </Button>\n                  </Col>\n                  ),\n                )}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      {renderCategorias\n        .sort((a, b) => a.level - b.level)\n        .map(({ Component }, index) => (\n          <Fade key={index}>\n            <Component\n              selectedIdade={idade}\n              selectedPelagem={pelagem}\n              selectedAndrologia={andrologia}\n              selectedPeso={peso}\n              selectedLitro={litro}\n              selectedRegistro={registro}\n            />\n          </Fade>\n        ))}\n      {showButton\n        && (!hasIdade || (hasIdade && idade))\n        && (!hasPelagem || (hasPelagem && pelagem))\n        && (!hasAndrologia || (hasAndrologia && andrologia))\n        && (!hasPeso || (hasPeso && peso))\n        && (!hasLitro || (hasLitro && litro))\n        && (!hasRegistro || (hasRegistro && registro)) && (\n          <Row>\n            <Col>\n              <Card>\n                <CardFooter>\n                  <Row className=\"justify-content-between px-3\">\n                    <Button onClick={handlePrev}>Anterior</Button>\n                    <Button onClick={handleNext}>Próximo</Button>\n                  </Row>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default Anuncio;\n"],"sourceRoot":""}