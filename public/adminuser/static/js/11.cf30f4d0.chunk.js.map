{"version":3,"sources":["app/pages/Animals/index.js"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","Animais","useManager","datas","load","destroy","update","store","useState","showModal","setShowModal","id","setId","name","setName","useEffect","handleUpdate","useCallback","data","_id","handleSave","columns","dataField","text","hidden","isMobile","formatter","cell","row","anuncio","titulo","categorias","map","categoria","color","className","idade","sort","csvExport","target","size","onClick","style","width","keyField","exportCSV","fileName","onlyExportFiltered","exportAll","separator","noAutoBOM","search","props","placeholder","searchProps","pagination","paginationFactory","baseProps","csvProps","isOpen","toggle","centered","type","value","onChange"],"mappings":"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","file":"static/js/11.cf30f4d0.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit';\nimport { isMobile } from 'react-device-detect';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  UncontrolledTooltip,\n} from 'reactstrap';\n\nimport { useManager } from '../../hooks/manager';\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction Animais() {\n  const { datas, load, destroy, update, store } = useManager();\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState();\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    load('/animals');\n  }, [load]);\n\n  const handleUpdate = useCallback((data) => {\n    setId(data._id);\n    setName(data.name);\n    setShowModal(true);\n  }, []);\n\n  const handleSave = useCallback(() => {\n    if (id) {\n      update(id, '/animals', { name });\n      setShowModal(false);\n      return;\n    }\n\n    store('/animals', { name });\n    setShowModal(false);\n  }, [id, name]);\n\n  const actions = (cell, row) => (\n    <>\n      <UncontrolledTooltip target={`button-view-${row._id}`}>\n        Alterar\n      </UncontrolledTooltip>\n      <Button\n        id={`button-view-${row._id}`}\n        color=\"info\"\n        size=\"sm\"\n        className=\"mt-2 mr-2\"\n        onClick={() => handleUpdate(row)}\n      >\n        <i className=\"fas fa-edit\" />\n      </Button>\n      <UncontrolledTooltip target={`button-delete-${row._id}`}>\n        Excluir\n      </UncontrolledTooltip>\n      <Button\n        id={`button-delete-${row._id}`}\n        color=\"danger\"\n        className=\"mt-2 mr-2\"\n        size=\"sm\"\n        onClick={() => destroy(row._id, '/animals')}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </>\n  );\n\n  const columns = [\n    {\n      dataField: '_id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'anuncio',\n      text: 'AnÃºncio',\n      hidden: isMobile,\n      formatter: (cell, row) => row?.anuncio?.titulo,\n    },\n    {\n      dataField: 'categorias',\n      text: 'Categoria',\n      hidden: isMobile,\n      formatter: (cell, row) => row?.categorias?.map((categoria) => (\n        <span>\n          <Badge color=\"secondary\" className=\"mr-1\">\n            {categoria.name}\n          </Badge>\n        </span>\n      )),\n    },\n    {\n      dataField: 'idade',\n      text: 'Idade',\n      hidden: isMobile,\n      formatter: (cell, row) => (\n        <span>\n          <Badge color=\"secondary\" className=\"mr-1\">\n            {row?.idade?.name}\n          </Badge>\n        </span>\n      ),\n    },\n    {\n      dataField: '#',\n      text: '#',\n      sort: false,\n      csvExport: false,\n      formatter: actions,\n      style: () => ({ width: '120px' }),\n    },\n  ];\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <Row>\n                <Col>\n                  <h3>Animais</h3>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardBody>\n              <ToolkitProvider\n                key=\"_id\"\n                keyField=\"_id\"\n                data={datas}\n                columns={columns}\n                exportCSV={{\n                  fileName: 'gadonamao.csv',\n                  onlyExportFiltered: true,\n                  exportAll: false,\n                  separator: ';',\n                  noAutoBOM: false,\n                }}\n                search\n              >\n                {(props) => (\n                  <div>\n                    <SearchBar placeholder=\"Buscar\" {...props.searchProps} />\n                    <hr />\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                )}\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(!showModal)}\n        centered\n      >\n        <ModalHeader>\n          <strong>Animal</strong>\n          <Button\n            className=\"close position-absolute top-4 right-4 py-1 px-2\"\n            onClick={() => setShowModal(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </Button>\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Nome\"\n                value={name}\n                onChange={({ target: { value } }) => setName(value)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={handleSave}>Salvar</Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Animais;\n"],"sourceRoot":""}